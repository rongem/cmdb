//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CmdbClient.CmsService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.Security")]
    public enum UserRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reader = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Editor = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Administrator = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class Item : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CmdbClient.CmsService.Item.Attribute[] attributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string colorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CmdbClient.CmsService.Item.Connection[] connectionsToLowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CmdbClient.CmsService.Item.Connection[] connectionsToUpperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CmdbClient.CmsService.Item.Link[] linksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CmdbClient.CmsService.Item.Responsibility[] responsibilitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid typeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int versionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CmdbClient.CmsService.Item.Attribute[] attributes {
            get {
                return this.attributesField;
            }
            set {
                if ((object.ReferenceEquals(this.attributesField, value) != true)) {
                    this.attributesField = value;
                    this.RaisePropertyChanged("attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string color {
            get {
                return this.colorField;
            }
            set {
                if ((object.ReferenceEquals(this.colorField, value) != true)) {
                    this.colorField = value;
                    this.RaisePropertyChanged("color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CmdbClient.CmsService.Item.Connection[] connectionsToLower {
            get {
                return this.connectionsToLowerField;
            }
            set {
                if ((object.ReferenceEquals(this.connectionsToLowerField, value) != true)) {
                    this.connectionsToLowerField = value;
                    this.RaisePropertyChanged("connectionsToLower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CmdbClient.CmsService.Item.Connection[] connectionsToUpper {
            get {
                return this.connectionsToUpperField;
            }
            set {
                if ((object.ReferenceEquals(this.connectionsToUpperField, value) != true)) {
                    this.connectionsToUpperField = value;
                    this.RaisePropertyChanged("connectionsToUpper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastChange {
            get {
                return this.lastChangeField;
            }
            set {
                if ((object.ReferenceEquals(this.lastChangeField, value) != true)) {
                    this.lastChangeField = value;
                    this.RaisePropertyChanged("lastChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CmdbClient.CmsService.Item.Link[] links {
            get {
                return this.linksField;
            }
            set {
                if ((object.ReferenceEquals(this.linksField, value) != true)) {
                    this.linksField = value;
                    this.RaisePropertyChanged("links");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CmdbClient.CmsService.Item.Responsibility[] responsibilities {
            get {
                return this.responsibilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.responsibilitiesField, value) != true)) {
                    this.responsibilitiesField = value;
                    this.RaisePropertyChanged("responsibilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid typeId {
            get {
                return this.typeIdField;
            }
            set {
                if ((this.typeIdField.Equals(value) != true)) {
                    this.typeIdField = value;
                    this.RaisePropertyChanged("typeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int version {
            get {
                return this.versionField;
            }
            set {
                if ((this.versionField.Equals(value) != true)) {
                    this.versionField = value;
                    this.RaisePropertyChanged("version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Item.Attribute", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
        [System.SerializableAttribute()]
        public partial class Attribute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Guid idField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string lastChangeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string typeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Guid typeIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string valueField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int versionField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Guid id {
                get {
                    return this.idField;
                }
                set {
                    if ((this.idField.Equals(value) != true)) {
                        this.idField = value;
                        this.RaisePropertyChanged("id");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string lastChange {
                get {
                    return this.lastChangeField;
                }
                set {
                    if ((object.ReferenceEquals(this.lastChangeField, value) != true)) {
                        this.lastChangeField = value;
                        this.RaisePropertyChanged("lastChange");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string type {
                get {
                    return this.typeField;
                }
                set {
                    if ((object.ReferenceEquals(this.typeField, value) != true)) {
                        this.typeField = value;
                        this.RaisePropertyChanged("type");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Guid typeId {
                get {
                    return this.typeIdField;
                }
                set {
                    if ((this.typeIdField.Equals(value) != true)) {
                        this.typeIdField = value;
                        this.RaisePropertyChanged("typeId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string value {
                get {
                    return this.valueField;
                }
                set {
                    if ((object.ReferenceEquals(this.valueField, value) != true)) {
                        this.valueField = value;
                        this.RaisePropertyChanged("value");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int version {
                get {
                    return this.versionField;
                }
                set {
                    if ((this.versionField.Equals(value) != true)) {
                        this.versionField = value;
                        this.RaisePropertyChanged("version");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Item.Connection", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
        [System.SerializableAttribute()]
        public partial class Connection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string connectionTypeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string descriptionField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Guid idField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Guid ruleIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string targetColorField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Guid targetIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string targetNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string targetTypeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Guid targetTypeIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Guid typeIdField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string connectionType {
                get {
                    return this.connectionTypeField;
                }
                set {
                    if ((object.ReferenceEquals(this.connectionTypeField, value) != true)) {
                        this.connectionTypeField = value;
                        this.RaisePropertyChanged("connectionType");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string description {
                get {
                    return this.descriptionField;
                }
                set {
                    if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                        this.descriptionField = value;
                        this.RaisePropertyChanged("description");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Guid id {
                get {
                    return this.idField;
                }
                set {
                    if ((this.idField.Equals(value) != true)) {
                        this.idField = value;
                        this.RaisePropertyChanged("id");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Guid ruleId {
                get {
                    return this.ruleIdField;
                }
                set {
                    if ((this.ruleIdField.Equals(value) != true)) {
                        this.ruleIdField = value;
                        this.RaisePropertyChanged("ruleId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string targetColor {
                get {
                    return this.targetColorField;
                }
                set {
                    if ((object.ReferenceEquals(this.targetColorField, value) != true)) {
                        this.targetColorField = value;
                        this.RaisePropertyChanged("targetColor");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Guid targetId {
                get {
                    return this.targetIdField;
                }
                set {
                    if ((this.targetIdField.Equals(value) != true)) {
                        this.targetIdField = value;
                        this.RaisePropertyChanged("targetId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string targetName {
                get {
                    return this.targetNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.targetNameField, value) != true)) {
                        this.targetNameField = value;
                        this.RaisePropertyChanged("targetName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string targetType {
                get {
                    return this.targetTypeField;
                }
                set {
                    if ((object.ReferenceEquals(this.targetTypeField, value) != true)) {
                        this.targetTypeField = value;
                        this.RaisePropertyChanged("targetType");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Guid targetTypeId {
                get {
                    return this.targetTypeIdField;
                }
                set {
                    if ((this.targetTypeIdField.Equals(value) != true)) {
                        this.targetTypeIdField = value;
                        this.RaisePropertyChanged("targetTypeId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Guid typeId {
                get {
                    return this.typeIdField;
                }
                set {
                    if ((this.typeIdField.Equals(value) != true)) {
                        this.typeIdField = value;
                        this.RaisePropertyChanged("typeId");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Item.Link", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
        [System.SerializableAttribute()]
        public partial class Link : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string descriptionField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Guid idField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string uriField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string description {
                get {
                    return this.descriptionField;
                }
                set {
                    if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                        this.descriptionField = value;
                        this.RaisePropertyChanged("description");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Guid id {
                get {
                    return this.idField;
                }
                set {
                    if ((this.idField.Equals(value) != true)) {
                        this.idField = value;
                        this.RaisePropertyChanged("id");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string uri {
                get {
                    return this.uriField;
                }
                set {
                    if ((object.ReferenceEquals(this.uriField, value) != true)) {
                        this.uriField = value;
                        this.RaisePropertyChanged("uri");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Item.Responsibility", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
        [System.SerializableAttribute()]
        public partial class Responsibility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string mailField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string nameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string officeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string phoneField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string mail {
                get {
                    return this.mailField;
                }
                set {
                    if ((object.ReferenceEquals(this.mailField, value) != true)) {
                        this.mailField = value;
                        this.RaisePropertyChanged("mail");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string name {
                get {
                    return this.nameField;
                }
                set {
                    if ((object.ReferenceEquals(this.nameField, value) != true)) {
                        this.nameField = value;
                        this.RaisePropertyChanged("name");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string office {
                get {
                    return this.officeField;
                }
                set {
                    if ((object.ReferenceEquals(this.officeField, value) != true)) {
                        this.officeField = value;
                        this.RaisePropertyChanged("office");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string phone {
                get {
                    return this.phoneField;
                }
                set {
                    if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                        this.phoneField = value;
                        this.RaisePropertyChanged("phone");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfigurationItem", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class ConfigurationItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemLastChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ItemTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ResponsibleUsersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemLastChange {
            get {
                return this.ItemLastChangeField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemLastChangeField, value) != true)) {
                    this.ItemLastChangeField = value;
                    this.RaisePropertyChanged("ItemLastChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ItemType {
            get {
                return this.ItemTypeField;
            }
            set {
                if ((this.ItemTypeField.Equals(value) != true)) {
                    this.ItemTypeField = value;
                    this.RaisePropertyChanged("ItemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemVersion {
            get {
                return this.ItemVersionField;
            }
            set {
                if ((this.ItemVersionField.Equals(value) != true)) {
                    this.ItemVersionField = value;
                    this.RaisePropertyChanged("ItemVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ResponsibleUsers {
            get {
                return this.ResponsibleUsersField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsibleUsersField, value) != true)) {
                    this.ResponsibleUsersField = value;
                    this.RaisePropertyChanged("ResponsibleUsers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Search", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class Search : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CmdbClient.CmsService.Search.SearchAttribute[] AttributesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CmdbClient.CmsService.Search.SearchConnection[] ConnectionsToLowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CmdbClient.CmsService.Search.SearchConnection[] ConnectionsToUpperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> ItemTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameOrValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponsibleTokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CmdbClient.CmsService.Search.SearchAttribute[] Attributes {
            get {
                return this.AttributesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributesField, value) != true)) {
                    this.AttributesField = value;
                    this.RaisePropertyChanged("Attributes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CmdbClient.CmsService.Search.SearchConnection[] ConnectionsToLower {
            get {
                return this.ConnectionsToLowerField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionsToLowerField, value) != true)) {
                    this.ConnectionsToLowerField = value;
                    this.RaisePropertyChanged("ConnectionsToLower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CmdbClient.CmsService.Search.SearchConnection[] ConnectionsToUpper {
            get {
                return this.ConnectionsToUpperField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionsToUpperField, value) != true)) {
                    this.ConnectionsToUpperField = value;
                    this.RaisePropertyChanged("ConnectionsToUpper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> ItemType {
            get {
                return this.ItemTypeField;
            }
            set {
                if ((this.ItemTypeField.Equals(value) != true)) {
                    this.ItemTypeField = value;
                    this.RaisePropertyChanged("ItemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameOrValue {
            get {
                return this.NameOrValueField;
            }
            set {
                if ((object.ReferenceEquals(this.NameOrValueField, value) != true)) {
                    this.NameOrValueField = value;
                    this.RaisePropertyChanged("NameOrValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponsibleToken {
            get {
                return this.ResponsibleTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsibleTokenField, value) != true)) {
                    this.ResponsibleTokenField = value;
                    this.RaisePropertyChanged("ResponsibleToken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Search.SearchAttribute", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
        [System.SerializableAttribute()]
        public partial class SearchAttribute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Guid AttributeTypeIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string AttributeValueField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Guid AttributeTypeId {
                get {
                    return this.AttributeTypeIdField;
                }
                set {
                    if ((this.AttributeTypeIdField.Equals(value) != true)) {
                        this.AttributeTypeIdField = value;
                        this.RaisePropertyChanged("AttributeTypeId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string AttributeValue {
                get {
                    return this.AttributeValueField;
                }
                set {
                    if ((object.ReferenceEquals(this.AttributeValueField, value) != true)) {
                        this.AttributeValueField = value;
                        this.RaisePropertyChanged("AttributeValue");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Search.SearchConnection", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
        [System.SerializableAttribute()]
        public partial class SearchConnection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<System.Guid> ConfigurationItemTypeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Guid ConnectionTypeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string CountField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<System.Guid> ConfigurationItemType {
                get {
                    return this.ConfigurationItemTypeField;
                }
                set {
                    if ((this.ConfigurationItemTypeField.Equals(value) != true)) {
                        this.ConfigurationItemTypeField = value;
                        this.RaisePropertyChanged("ConfigurationItemType");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Guid ConnectionType {
                get {
                    return this.ConnectionTypeField;
                }
                set {
                    if ((this.ConnectionTypeField.Equals(value) != true)) {
                        this.ConnectionTypeField = value;
                        this.RaisePropertyChanged("ConnectionType");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Count {
                get {
                    return this.CountField;
                }
                set {
                    if ((object.ReferenceEquals(this.CountField, value) != true)) {
                        this.CountField = value;
                        this.RaisePropertyChanged("Count");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NeighborSearch", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class NeighborSearch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CmdbClient.CmsService.Search ExtraSearchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ItemTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxLevelsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CmdbClient.CmsService.Direction SearchDirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SourceItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CmdbClient.CmsService.Search ExtraSearch {
            get {
                return this.ExtraSearchField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraSearchField, value) != true)) {
                    this.ExtraSearchField = value;
                    this.RaisePropertyChanged("ExtraSearch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ItemType {
            get {
                return this.ItemTypeField;
            }
            set {
                if ((this.ItemTypeField.Equals(value) != true)) {
                    this.ItemTypeField = value;
                    this.RaisePropertyChanged("ItemType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxLevels {
            get {
                return this.MaxLevelsField;
            }
            set {
                if ((this.MaxLevelsField.Equals(value) != true)) {
                    this.MaxLevelsField = value;
                    this.RaisePropertyChanged("MaxLevels");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CmdbClient.CmsService.Direction SearchDirection {
            get {
                return this.SearchDirectionField;
            }
            set {
                if ((this.SearchDirectionField.Equals(value) != true)) {
                    this.SearchDirectionField = value;
                    this.RaisePropertyChanged("SearchDirection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SourceItem {
            get {
                return this.SourceItemField;
            }
            set {
                if ((this.SourceItemField.Equals(value) != true)) {
                    this.SourceItemField = value;
                    this.RaisePropertyChanged("SourceItem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Direction", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    public enum Direction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Upward = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Both = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Downward = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NeighborItem", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class NeighborItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CmdbClient.CmsService.ConfigurationItem ItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CmdbClient.CmsService.ConfigurationItem Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemResponsibility", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class ItemResponsibility : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponsibleTokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResponsibleToken {
            get {
                return this.ResponsibleTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponsibleTokenField, value) != true)) {
                    this.ResponsibleTokenField = value;
                    this.RaisePropertyChanged("ResponsibleToken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemAttribute", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class ItemAttribute : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AttributeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeLastChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AttributeTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttributeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttributeVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ItemIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AttributeId {
            get {
                return this.AttributeIdField;
            }
            set {
                if ((this.AttributeIdField.Equals(value) != true)) {
                    this.AttributeIdField = value;
                    this.RaisePropertyChanged("AttributeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeLastChange {
            get {
                return this.AttributeLastChangeField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeLastChangeField, value) != true)) {
                    this.AttributeLastChangeField = value;
                    this.RaisePropertyChanged("AttributeLastChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AttributeTypeId {
            get {
                return this.AttributeTypeIdField;
            }
            set {
                if ((this.AttributeTypeIdField.Equals(value) != true)) {
                    this.AttributeTypeIdField = value;
                    this.RaisePropertyChanged("AttributeTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeTypeName {
            get {
                return this.AttributeTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeTypeNameField, value) != true)) {
                    this.AttributeTypeNameField = value;
                    this.RaisePropertyChanged("AttributeTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AttributeValue {
            get {
                return this.AttributeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.AttributeValueField, value) != true)) {
                    this.AttributeValueField = value;
                    this.RaisePropertyChanged("AttributeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttributeVersion {
            get {
                return this.AttributeVersionField;
            }
            set {
                if ((this.AttributeVersionField.Equals(value) != true)) {
                    this.AttributeVersionField = value;
                    this.RaisePropertyChanged("AttributeVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Connection", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class Connection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ConnIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ConnLowerItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ConnTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ConnUpperItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RuleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ConnId {
            get {
                return this.ConnIdField;
            }
            set {
                if ((this.ConnIdField.Equals(value) != true)) {
                    this.ConnIdField = value;
                    this.RaisePropertyChanged("ConnId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ConnLowerItem {
            get {
                return this.ConnLowerItemField;
            }
            set {
                if ((this.ConnLowerItemField.Equals(value) != true)) {
                    this.ConnLowerItemField = value;
                    this.RaisePropertyChanged("ConnLowerItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ConnType {
            get {
                return this.ConnTypeField;
            }
            set {
                if ((this.ConnTypeField.Equals(value) != true)) {
                    this.ConnTypeField = value;
                    this.RaisePropertyChanged("ConnType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ConnUpperItem {
            get {
                return this.ConnUpperItemField;
            }
            set {
                if ((this.ConnUpperItemField.Equals(value) != true)) {
                    this.ConnUpperItemField = value;
                    this.RaisePropertyChanged("ConnUpperItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RuleId {
            get {
                return this.RuleIdField;
            }
            set {
                if ((this.RuleIdField.Equals(value) != true)) {
                    this.RuleIdField = value;
                    this.RaisePropertyChanged("RuleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemLink", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class ItemLink : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid LinkIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkURIField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkDescription {
            get {
                return this.LinkDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkDescriptionField, value) != true)) {
                    this.LinkDescriptionField = value;
                    this.RaisePropertyChanged("LinkDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid LinkId {
            get {
                return this.LinkIdField;
            }
            set {
                if ((this.LinkIdField.Equals(value) != true)) {
                    this.LinkIdField = value;
                    this.RaisePropertyChanged("LinkId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LinkURI {
            get {
                return this.LinkURIField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkURIField, value) != true)) {
                    this.LinkURIField = value;
                    this.RaisePropertyChanged("LinkURI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeGroup", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class AttributeGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeType", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class AttributeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AttributeGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AttributeGroup {
            get {
                return this.AttributeGroupField;
            }
            set {
                if ((this.AttributeGroupField.Equals(value) != true)) {
                    this.AttributeGroupField = value;
                    this.RaisePropertyChanged("AttributeGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionType", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class ConnectionType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ConnTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnTypeReverseNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ConnTypeId {
            get {
                return this.ConnTypeIdField;
            }
            set {
                if ((this.ConnTypeIdField.Equals(value) != true)) {
                    this.ConnTypeIdField = value;
                    this.RaisePropertyChanged("ConnTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnTypeName {
            get {
                return this.ConnTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnTypeNameField, value) != true)) {
                    this.ConnTypeNameField = value;
                    this.RaisePropertyChanged("ConnTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnTypeReverseName {
            get {
                return this.ConnTypeReverseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnTypeReverseNameField, value) != true)) {
                    this.ConnTypeReverseNameField = value;
                    this.RaisePropertyChanged("ConnTypeReverseName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemType", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class ItemType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeBackColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeBackColor {
            get {
                return this.TypeBackColorField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeBackColorField, value) != true)) {
                    this.TypeBackColorField = value;
                    this.RaisePropertyChanged("TypeBackColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionRule", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class ConnectionRule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ConnTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ItemLowerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ItemUpperTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxConnectionsToLowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxConnectionsToUpperField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RuleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ConnType {
            get {
                return this.ConnTypeField;
            }
            set {
                if ((this.ConnTypeField.Equals(value) != true)) {
                    this.ConnTypeField = value;
                    this.RaisePropertyChanged("ConnType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ItemLowerType {
            get {
                return this.ItemLowerTypeField;
            }
            set {
                if ((this.ItemLowerTypeField.Equals(value) != true)) {
                    this.ItemLowerTypeField = value;
                    this.RaisePropertyChanged("ItemLowerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ItemUpperType {
            get {
                return this.ItemUpperTypeField;
            }
            set {
                if ((this.ItemUpperTypeField.Equals(value) != true)) {
                    this.ItemUpperTypeField = value;
                    this.RaisePropertyChanged("ItemUpperType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxConnectionsToLower {
            get {
                return this.MaxConnectionsToLowerField;
            }
            set {
                if ((this.MaxConnectionsToLowerField.Equals(value) != true)) {
                    this.MaxConnectionsToLowerField = value;
                    this.RaisePropertyChanged("MaxConnectionsToLower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxConnectionsToUpper {
            get {
                return this.MaxConnectionsToUpperField;
            }
            set {
                if ((this.MaxConnectionsToUpperField.Equals(value) != true)) {
                    this.MaxConnectionsToUpperField = value;
                    this.RaisePropertyChanged("MaxConnectionsToUpper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RuleId {
            get {
                return this.RuleIdField;
            }
            set {
                if ((this.RuleIdField.Equals(value) != true)) {
                    this.RuleIdField = value;
                    this.RaisePropertyChanged("RuleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemTypeAttributeGroupMapping", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class ItemTypeAttributeGroupMapping : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ItemTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ItemTypeId {
            get {
                return this.ItemTypeIdField;
            }
            set {
                if ((this.ItemTypeIdField.Equals(value) != true)) {
                    this.ItemTypeIdField = value;
                    this.RaisePropertyChanged("ItemTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResult", Namespace="http://schemas.datacontract.org/2004/07/CmdbAPI.TransferObjects")]
    [System.SerializableAttribute()]
    public partial class OperationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CmsService.ICmsService")]
    public interface ICmsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetItemTypesCount", ReplyAction="http://tempuri.org/ICmsService/GetItemTypesCountResponse")]
        int GetItemTypesCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetItemTypesCount", ReplyAction="http://tempuri.org/ICmsService/GetItemTypesCountResponse")]
        System.Threading.Tasks.Task<int> GetItemTypesCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetRoleForUser", ReplyAction="http://tempuri.org/ICmsService/GetRoleForUserResponse")]
        CmdbClient.CmsService.UserRole GetRoleForUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetRoleForUser", ReplyAction="http://tempuri.org/ICmsService/GetRoleForUserResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.UserRole> GetRoleForUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/Test", ReplyAction="http://tempuri.org/ICmsService/TestResponse")]
        string Test();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/Test", ReplyAction="http://tempuri.org/ICmsService/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetItem", ReplyAction="http://tempuri.org/ICmsService/GetItemResponse")]
        CmdbClient.CmsService.Item GetItem(string itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetItem", ReplyAction="http://tempuri.org/ICmsService/GetItemResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.Item> GetItemAsync(string itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/GetConfigurationItemResponse")]
        CmdbClient.CmsService.ConfigurationItem GetConfigurationItem(System.Guid itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/GetConfigurationItemResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem> GetConfigurationItemAsync(System.Guid itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConfigurationItems", ReplyAction="http://tempuri.org/ICmsService/GetConfigurationItemsResponse")]
        CmdbClient.CmsService.ConfigurationItem[] GetConfigurationItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConfigurationItems", ReplyAction="http://tempuri.org/ICmsService/GetConfigurationItemsResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem[]> GetConfigurationItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/SearchConfigurationItems", ReplyAction="http://tempuri.org/ICmsService/SearchConfigurationItemsResponse")]
        CmdbClient.CmsService.ConfigurationItem[] SearchConfigurationItems(CmdbClient.CmsService.Search search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/SearchConfigurationItems", ReplyAction="http://tempuri.org/ICmsService/SearchConfigurationItemsResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem[]> SearchConfigurationItemsAsync(CmdbClient.CmsService.Search search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/SearchNeighborConfigurationItems", ReplyAction="http://tempuri.org/ICmsService/SearchNeighborConfigurationItemsResponse")]
        CmdbClient.CmsService.NeighborItem[] SearchNeighborConfigurationItems(CmdbClient.CmsService.NeighborSearch search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/SearchNeighborConfigurationItems", ReplyAction="http://tempuri.org/ICmsService/SearchNeighborConfigurationItemsResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.NeighborItem[]> SearchNeighborConfigurationItemsAsync(CmdbClient.CmsService.NeighborSearch search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConfigurationItemsByType", ReplyAction="http://tempuri.org/ICmsService/GetConfigurationItemsByTypeResponse")]
        CmdbClient.CmsService.ConfigurationItem[] GetConfigurationItemsByType(System.Guid[] typeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConfigurationItemsByType", ReplyAction="http://tempuri.org/ICmsService/GetConfigurationItemsByTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem[]> GetConfigurationItemsByTypeAsync(System.Guid[] typeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConfigurationItemsByTypeName", ReplyAction="http://tempuri.org/ICmsService/GetConfigurationItemsByTypeNameResponse")]
        CmdbClient.CmsService.ConfigurationItem[] GetConfigurationItemsByTypeName(string[] typeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConfigurationItemsByTypeName", ReplyAction="http://tempuri.org/ICmsService/GetConfigurationItemsByTypeNameResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem[]> GetConfigurationItemsByTypeNameAsync(string[] typeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConfigurationItemByTypeIdAndName", ReplyAction="http://tempuri.org/ICmsService/GetConfigurationItemByTypeIdAndNameResponse")]
        CmdbClient.CmsService.ConfigurationItem GetConfigurationItemByTypeIdAndName(System.Guid itemType, string itemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConfigurationItemByTypeIdAndName", ReplyAction="http://tempuri.org/ICmsService/GetConfigurationItemByTypeIdAndNameResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem> GetConfigurationItemByTypeIdAndNameAsync(System.Guid itemType, string itemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConfigurationItemsConnectableAsLowerItem", ReplyAction="http://tempuri.org/ICmsService/GetConfigurationItemsConnectableAsLowerItemRespons" +
            "e")]
        CmdbClient.CmsService.ConfigurationItem[] GetConfigurationItemsConnectableAsLowerItem(System.Guid itemId, System.Guid ruleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConfigurationItemsConnectableAsLowerItem", ReplyAction="http://tempuri.org/ICmsService/GetConfigurationItemsConnectableAsLowerItemRespons" +
            "e")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem[]> GetConfigurationItemsConnectableAsLowerItemAsync(System.Guid itemId, System.Guid ruleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConfigurationItemsConnectableAsUpperItem", ReplyAction="http://tempuri.org/ICmsService/GetConfigurationItemsConnectableAsUpperItemRespons" +
            "e")]
        CmdbClient.CmsService.ConfigurationItem[] GetConfigurationItemsConnectableAsUpperItem(System.Guid itemId, System.Guid ruleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConfigurationItemsConnectableAsUpperItem", ReplyAction="http://tempuri.org/ICmsService/GetConfigurationItemsConnectableAsUpperItemRespons" +
            "e")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem[]> GetConfigurationItemsConnectableAsUpperItemAsync(System.Guid itemId, System.Guid ruleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetResponsibilitesForConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/GetResponsibilitesForConfigurationItemResponse")]
        CmdbClient.CmsService.ItemResponsibility[] GetResponsibilitesForConfigurationItem(CmdbClient.CmsService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetResponsibilitesForConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/GetResponsibilitesForConfigurationItemResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ItemResponsibility[]> GetResponsibilitesForConfigurationItemAsync(CmdbClient.CmsService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributesForConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/GetAttributesForConfigurationItemResponse")]
        CmdbClient.CmsService.ItemAttribute[] GetAttributesForConfigurationItem(System.Guid itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributesForConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/GetAttributesForConfigurationItemResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ItemAttribute[]> GetAttributesForConfigurationItemAsync(System.Guid itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributesForAttributeType", ReplyAction="http://tempuri.org/ICmsService/GetAttributesForAttributeTypeResponse")]
        CmdbClient.CmsService.ItemAttribute[] GetAttributesForAttributeType(System.Guid attributeTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributesForAttributeType", ReplyAction="http://tempuri.org/ICmsService/GetAttributesForAttributeTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ItemAttribute[]> GetAttributesForAttributeTypeAsync(System.Guid attributeTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttribute", ReplyAction="http://tempuri.org/ICmsService/GetAttributeResponse")]
        CmdbClient.CmsService.ItemAttribute GetAttribute(System.Guid attributeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttribute", ReplyAction="http://tempuri.org/ICmsService/GetAttributeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ItemAttribute> GetAttributeAsync(System.Guid attributeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeForConfigurationItemByAttributeType", ReplyAction="http://tempuri.org/ICmsService/GetAttributeForConfigurationItemByAttributeTypeRes" +
            "ponse")]
        CmdbClient.CmsService.ItemAttribute GetAttributeForConfigurationItemByAttributeType(System.Guid itemId, System.Guid typeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeForConfigurationItemByAttributeType", ReplyAction="http://tempuri.org/ICmsService/GetAttributeForConfigurationItemByAttributeTypeRes" +
            "ponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ItemAttribute> GetAttributeForConfigurationItemByAttributeTypeAsync(System.Guid itemId, System.Guid typeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeForConfigurationItemByAttributeTypeNam" +
            "e", ReplyAction="http://tempuri.org/ICmsService/GetAttributeForConfigurationItemByAttributeTypeNam" +
            "eResponse")]
        CmdbClient.CmsService.ItemAttribute GetAttributeForConfigurationItemByAttributeTypeName(System.Guid itemId, string typeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeForConfigurationItemByAttributeTypeNam" +
            "e", ReplyAction="http://tempuri.org/ICmsService/GetAttributeForConfigurationItemByAttributeTypeNam" +
            "eResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ItemAttribute> GetAttributeForConfigurationItemByAttributeTypeNameAsync(System.Guid itemId, string typeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionsForItem", ReplyAction="http://tempuri.org/ICmsService/GetConnectionsForItemResponse")]
        CmdbClient.CmsService.Connection[] GetConnectionsForItem(System.Guid itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionsForItem", ReplyAction="http://tempuri.org/ICmsService/GetConnectionsForItemResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.Connection[]> GetConnectionsForItemAsync(System.Guid itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionsToLowerForItem", ReplyAction="http://tempuri.org/ICmsService/GetConnectionsToLowerForItemResponse")]
        CmdbClient.CmsService.Connection[] GetConnectionsToLowerForItem(System.Guid itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionsToLowerForItem", ReplyAction="http://tempuri.org/ICmsService/GetConnectionsToLowerForItemResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.Connection[]> GetConnectionsToLowerForItemAsync(System.Guid itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionsToUpperForItem", ReplyAction="http://tempuri.org/ICmsService/GetConnectionsToUpperForItemResponse")]
        CmdbClient.CmsService.Connection[] GetConnectionsToUpperForItem(System.Guid itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionsToUpperForItem", ReplyAction="http://tempuri.org/ICmsService/GetConnectionsToUpperForItemResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.Connection[]> GetConnectionsToUpperForItemAsync(System.Guid itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionByContent", ReplyAction="http://tempuri.org/ICmsService/GetConnectionByContentResponse")]
        CmdbClient.CmsService.Connection GetConnectionByContent(System.Guid upperItemId, System.Guid connectionTypeId, System.Guid lowerItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionByContent", ReplyAction="http://tempuri.org/ICmsService/GetConnectionByContentResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.Connection> GetConnectionByContentAsync(System.Guid upperItemId, System.Guid connectionTypeId, System.Guid lowerItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetLinksForConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/GetLinksForConfigurationItemResponse")]
        CmdbClient.CmsService.ItemLink[] GetLinksForConfigurationItem(System.Guid itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetLinksForConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/GetLinksForConfigurationItemResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ItemLink[]> GetLinksForConfigurationItemAsync(System.Guid itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnection", ReplyAction="http://tempuri.org/ICmsService/GetConnectionResponse")]
        CmdbClient.CmsService.Connection GetConnection(System.Guid connId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnection", ReplyAction="http://tempuri.org/ICmsService/GetConnectionResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.Connection> GetConnectionAsync(System.Guid connId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeGroups", ReplyAction="http://tempuri.org/ICmsService/GetAttributeGroupsResponse")]
        CmdbClient.CmsService.AttributeGroup[] GetAttributeGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeGroups", ReplyAction="http://tempuri.org/ICmsService/GetAttributeGroupsResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeGroup[]> GetAttributeGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeGroup", ReplyAction="http://tempuri.org/ICmsService/GetAttributeGroupResponse")]
        CmdbClient.CmsService.AttributeGroup GetAttributeGroup(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeGroup", ReplyAction="http://tempuri.org/ICmsService/GetAttributeGroupResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeGroup> GetAttributeGroupAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeGroupsAssignedToItemType", ReplyAction="http://tempuri.org/ICmsService/GetAttributeGroupsAssignedToItemTypeResponse")]
        CmdbClient.CmsService.AttributeGroup[] GetAttributeGroupsAssignedToItemType(System.Guid itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeGroupsAssignedToItemType", ReplyAction="http://tempuri.org/ICmsService/GetAttributeGroupsAssignedToItemTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeGroup[]> GetAttributeGroupsAssignedToItemTypeAsync(System.Guid itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeGroupsNotAssignedToItemType", ReplyAction="http://tempuri.org/ICmsService/GetAttributeGroupsNotAssignedToItemTypeResponse")]
        CmdbClient.CmsService.AttributeGroup[] GetAttributeGroupsNotAssignedToItemType(System.Guid itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeGroupsNotAssignedToItemType", ReplyAction="http://tempuri.org/ICmsService/GetAttributeGroupsNotAssignedToItemTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeGroup[]> GetAttributeGroupsNotAssignedToItemTypeAsync(System.Guid itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeTypes", ReplyAction="http://tempuri.org/ICmsService/GetAttributeTypesResponse")]
        CmdbClient.CmsService.AttributeType[] GetAttributeTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeTypes", ReplyAction="http://tempuri.org/ICmsService/GetAttributeTypesResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeType[]> GetAttributeTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeType", ReplyAction="http://tempuri.org/ICmsService/GetAttributeTypeResponse")]
        CmdbClient.CmsService.AttributeType GetAttributeType(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeType", ReplyAction="http://tempuri.org/ICmsService/GetAttributeTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeType> GetAttributeTypeAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeTypesForAttributeGroup", ReplyAction="http://tempuri.org/ICmsService/GetAttributeTypesForAttributeGroupResponse")]
        CmdbClient.CmsService.AttributeType[] GetAttributeTypesForAttributeGroup(CmdbClient.CmsService.AttributeGroup group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeTypesForAttributeGroup", ReplyAction="http://tempuri.org/ICmsService/GetAttributeTypesForAttributeGroupResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeType[]> GetAttributeTypesForAttributeGroupAsync(CmdbClient.CmsService.AttributeGroup group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeTypesForItemType", ReplyAction="http://tempuri.org/ICmsService/GetAttributeTypesForItemTypeResponse")]
        CmdbClient.CmsService.AttributeType[] GetAttributeTypesForItemType(System.Guid itemTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeTypesForItemType", ReplyAction="http://tempuri.org/ICmsService/GetAttributeTypesForItemTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeType[]> GetAttributeTypesForItemTypeAsync(System.Guid itemTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeTypesForCorrespondingValuesOfType", ReplyAction="http://tempuri.org/ICmsService/GetAttributeTypesForCorrespondingValuesOfTypeRespo" +
            "nse")]
        CmdbClient.CmsService.AttributeType[] GetAttributeTypesForCorrespondingValuesOfType(System.Guid attributeTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAttributeTypesForCorrespondingValuesOfType", ReplyAction="http://tempuri.org/ICmsService/GetAttributeTypesForCorrespondingValuesOfTypeRespo" +
            "nse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeType[]> GetAttributeTypesForCorrespondingValuesOfTypeAsync(System.Guid attributeTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAllowedDownwardConnnectionTypesForItemType", ReplyAction="http://tempuri.org/ICmsService/GetAllowedDownwardConnnectionTypesForItemTypeRespo" +
            "nse")]
        CmdbClient.CmsService.ConnectionType[] GetAllowedDownwardConnnectionTypesForItemType(System.Guid itemTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetAllowedDownwardConnnectionTypesForItemType", ReplyAction="http://tempuri.org/ICmsService/GetAllowedDownwardConnnectionTypesForItemTypeRespo" +
            "nse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionType[]> GetAllowedDownwardConnnectionTypesForItemTypeAsync(System.Guid itemTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetLowerItemTypeForUpperItemTypeAndConnectionType", ReplyAction="http://tempuri.org/ICmsService/GetLowerItemTypeForUpperItemTypeAndConnectionTypeR" +
            "esponse")]
        CmdbClient.CmsService.ItemType[] GetLowerItemTypeForUpperItemTypeAndConnectionType(System.Guid upperItemTypeId, System.Guid connectionTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetLowerItemTypeForUpperItemTypeAndConnectionType", ReplyAction="http://tempuri.org/ICmsService/GetLowerItemTypeForUpperItemTypeAndConnectionTypeR" +
            "esponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ItemType[]> GetLowerItemTypeForUpperItemTypeAndConnectionTypeAsync(System.Guid upperItemTypeId, System.Guid connectionTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetUpperItemTypeForLowerItemTypeAndConnectionType", ReplyAction="http://tempuri.org/ICmsService/GetUpperItemTypeForLowerItemTypeAndConnectionTypeR" +
            "esponse")]
        CmdbClient.CmsService.ItemType[] GetUpperItemTypeForLowerItemTypeAndConnectionType(System.Guid lowerItemTypeId, System.Guid connectionTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetUpperItemTypeForLowerItemTypeAndConnectionType", ReplyAction="http://tempuri.org/ICmsService/GetUpperItemTypeForLowerItemTypeAndConnectionTypeR" +
            "esponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ItemType[]> GetUpperItemTypeForLowerItemTypeAndConnectionTypeAsync(System.Guid lowerItemTypeId, System.Guid connectionTypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionRules", ReplyAction="http://tempuri.org/ICmsService/GetConnectionRulesResponse")]
        CmdbClient.CmsService.ConnectionRule[] GetConnectionRules();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionRules", ReplyAction="http://tempuri.org/ICmsService/GetConnectionRulesResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionRule[]> GetConnectionRulesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionRulesForItemType", ReplyAction="http://tempuri.org/ICmsService/GetConnectionRulesForItemTypeResponse")]
        CmdbClient.CmsService.ConnectionRule[] GetConnectionRulesForItemType(System.Guid itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionRulesForItemType", ReplyAction="http://tempuri.org/ICmsService/GetConnectionRulesForItemTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionRule[]> GetConnectionRulesForItemTypeAsync(System.Guid itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionRulesByUpperItemType", ReplyAction="http://tempuri.org/ICmsService/GetConnectionRulesByUpperItemTypeResponse")]
        CmdbClient.CmsService.ConnectionRule[] GetConnectionRulesByUpperItemType(System.Guid itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionRulesByUpperItemType", ReplyAction="http://tempuri.org/ICmsService/GetConnectionRulesByUpperItemTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionRule[]> GetConnectionRulesByUpperItemTypeAsync(System.Guid itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionRulesByLowerItemType", ReplyAction="http://tempuri.org/ICmsService/GetConnectionRulesByLowerItemTypeResponse")]
        CmdbClient.CmsService.ConnectionRule[] GetConnectionRulesByLowerItemType(System.Guid itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionRulesByLowerItemType", ReplyAction="http://tempuri.org/ICmsService/GetConnectionRulesByLowerItemTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionRule[]> GetConnectionRulesByLowerItemTypeAsync(System.Guid itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionRule", ReplyAction="http://tempuri.org/ICmsService/GetConnectionRuleResponse")]
        CmdbClient.CmsService.ConnectionRule GetConnectionRule(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionRule", ReplyAction="http://tempuri.org/ICmsService/GetConnectionRuleResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionRule> GetConnectionRuleAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionRuleByContent", ReplyAction="http://tempuri.org/ICmsService/GetConnectionRuleByContentResponse")]
        CmdbClient.CmsService.ConnectionRule GetConnectionRuleByContent(System.Guid upperItemType, System.Guid connectionType, System.Guid lowerItemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionRuleByContent", ReplyAction="http://tempuri.org/ICmsService/GetConnectionRuleByContentResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionRule> GetConnectionRuleByContentAsync(System.Guid upperItemType, System.Guid connectionType, System.Guid lowerItemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionRulesByUpperAndLowerItemType", ReplyAction="http://tempuri.org/ICmsService/GetConnectionRulesByUpperAndLowerItemTypeResponse")]
        CmdbClient.CmsService.ConnectionRule[] GetConnectionRulesByUpperAndLowerItemType(System.Guid upperItemType, System.Guid lowerItemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionRulesByUpperAndLowerItemType", ReplyAction="http://tempuri.org/ICmsService/GetConnectionRulesByUpperAndLowerItemTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionRule[]> GetConnectionRulesByUpperAndLowerItemTypeAsync(System.Guid upperItemType, System.Guid lowerItemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionTypes", ReplyAction="http://tempuri.org/ICmsService/GetConnectionTypesResponse")]
        CmdbClient.CmsService.ConnectionType[] GetConnectionTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionTypes", ReplyAction="http://tempuri.org/ICmsService/GetConnectionTypesResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionType[]> GetConnectionTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionType", ReplyAction="http://tempuri.org/ICmsService/GetConnectionTypeResponse")]
        CmdbClient.CmsService.ConnectionType GetConnectionType(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionType", ReplyAction="http://tempuri.org/ICmsService/GetConnectionTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionType> GetConnectionTypeAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetItemTypes", ReplyAction="http://tempuri.org/ICmsService/GetItemTypesResponse")]
        CmdbClient.CmsService.ItemType[] GetItemTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetItemTypes", ReplyAction="http://tempuri.org/ICmsService/GetItemTypesResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ItemType[]> GetItemTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetItemType", ReplyAction="http://tempuri.org/ICmsService/GetItemTypeResponse")]
        CmdbClient.CmsService.ItemType GetItemType(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetItemType", ReplyAction="http://tempuri.org/ICmsService/GetItemTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ItemType> GetItemTypeAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetItemTypesByAllowedAttributeType", ReplyAction="http://tempuri.org/ICmsService/GetItemTypesByAllowedAttributeTypeResponse")]
        CmdbClient.CmsService.ItemType[] GetItemTypesByAllowedAttributeType(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetItemTypesByAllowedAttributeType", ReplyAction="http://tempuri.org/ICmsService/GetItemTypesByAllowedAttributeTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ItemType[]> GetItemTypesByAllowedAttributeTypeAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetItemTypeAttributeGroupMappings", ReplyAction="http://tempuri.org/ICmsService/GetItemTypeAttributeGroupMappingsResponse")]
        CmdbClient.CmsService.ItemTypeAttributeGroupMapping[] GetItemTypeAttributeGroupMappings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetItemTypeAttributeGroupMappings", ReplyAction="http://tempuri.org/ICmsService/GetItemTypeAttributeGroupMappingsResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.ItemTypeAttributeGroupMapping[]> GetItemTypeAttributeGroupMappingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/TakeResponsibilityForConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/TakeResponsibilityForConfigurationItemResponse")]
        CmdbClient.CmsService.OperationResult TakeResponsibilityForConfigurationItem(CmdbClient.CmsService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/TakeResponsibilityForConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/TakeResponsibilityForConfigurationItemResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> TakeResponsibilityForConfigurationItemAsync(CmdbClient.CmsService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateAttributeGroup", ReplyAction="http://tempuri.org/ICmsService/CreateAttributeGroupResponse")]
        CmdbClient.CmsService.OperationResult CreateAttributeGroup(CmdbClient.CmsService.AttributeGroup attributeGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateAttributeGroup", ReplyAction="http://tempuri.org/ICmsService/CreateAttributeGroupResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateAttributeGroupAsync(CmdbClient.CmsService.AttributeGroup attributeGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateAttributeType", ReplyAction="http://tempuri.org/ICmsService/CreateAttributeTypeResponse")]
        CmdbClient.CmsService.OperationResult CreateAttributeType(CmdbClient.CmsService.AttributeType attributeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateAttributeType", ReplyAction="http://tempuri.org/ICmsService/CreateAttributeTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateAttributeTypeAsync(CmdbClient.CmsService.AttributeType attributeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateConnectionRule", ReplyAction="http://tempuri.org/ICmsService/CreateConnectionRuleResponse")]
        CmdbClient.CmsService.OperationResult CreateConnectionRule(CmdbClient.CmsService.ConnectionRule connectionRule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateConnectionRule", ReplyAction="http://tempuri.org/ICmsService/CreateConnectionRuleResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateConnectionRuleAsync(CmdbClient.CmsService.ConnectionRule connectionRule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateConnectionType", ReplyAction="http://tempuri.org/ICmsService/CreateConnectionTypeResponse")]
        CmdbClient.CmsService.OperationResult CreateConnectionType(CmdbClient.CmsService.ConnectionType connectionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateConnectionType", ReplyAction="http://tempuri.org/ICmsService/CreateConnectionTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateConnectionTypeAsync(CmdbClient.CmsService.ConnectionType connectionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateItemType", ReplyAction="http://tempuri.org/ICmsService/CreateItemTypeResponse")]
        CmdbClient.CmsService.OperationResult CreateItemType(CmdbClient.CmsService.ItemType itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateItemType", ReplyAction="http://tempuri.org/ICmsService/CreateItemTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateItemTypeAsync(CmdbClient.CmsService.ItemType itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateItemTypeAttributeGroupMapping", ReplyAction="http://tempuri.org/ICmsService/CreateItemTypeAttributeGroupMappingResponse")]
        CmdbClient.CmsService.OperationResult CreateItemTypeAttributeGroupMapping(CmdbClient.CmsService.ItemTypeAttributeGroupMapping itemTypeAttributeMapping);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateItemTypeAttributeGroupMapping", ReplyAction="http://tempuri.org/ICmsService/CreateItemTypeAttributeGroupMappingResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateItemTypeAttributeGroupMappingAsync(CmdbClient.CmsService.ItemTypeAttributeGroupMapping itemTypeAttributeMapping);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/CreateConfigurationItemResponse")]
        CmdbClient.CmsService.OperationResult CreateConfigurationItem(CmdbClient.CmsService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/CreateConfigurationItemResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateConfigurationItemAsync(CmdbClient.CmsService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/UpdateAttributeGroup", ReplyAction="http://tempuri.org/ICmsService/UpdateAttributeGroupResponse")]
        CmdbClient.CmsService.OperationResult UpdateAttributeGroup(CmdbClient.CmsService.AttributeGroup attributeGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/UpdateAttributeGroup", ReplyAction="http://tempuri.org/ICmsService/UpdateAttributeGroupResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> UpdateAttributeGroupAsync(CmdbClient.CmsService.AttributeGroup attributeGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/UpdateAttributeType", ReplyAction="http://tempuri.org/ICmsService/UpdateAttributeTypeResponse")]
        CmdbClient.CmsService.OperationResult UpdateAttributeType(CmdbClient.CmsService.AttributeType attributeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/UpdateAttributeType", ReplyAction="http://tempuri.org/ICmsService/UpdateAttributeTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> UpdateAttributeTypeAsync(CmdbClient.CmsService.AttributeType attributeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/UpdateConnectionRule", ReplyAction="http://tempuri.org/ICmsService/UpdateConnectionRuleResponse")]
        CmdbClient.CmsService.OperationResult UpdateConnectionRule(CmdbClient.CmsService.ConnectionRule connectionRule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/UpdateConnectionRule", ReplyAction="http://tempuri.org/ICmsService/UpdateConnectionRuleResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> UpdateConnectionRuleAsync(CmdbClient.CmsService.ConnectionRule connectionRule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/UpdateConnectionType", ReplyAction="http://tempuri.org/ICmsService/UpdateConnectionTypeResponse")]
        CmdbClient.CmsService.OperationResult UpdateConnectionType(CmdbClient.CmsService.ConnectionType connectionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/UpdateConnectionType", ReplyAction="http://tempuri.org/ICmsService/UpdateConnectionTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> UpdateConnectionTypeAsync(CmdbClient.CmsService.ConnectionType connectionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/UpdateItemType", ReplyAction="http://tempuri.org/ICmsService/UpdateItemTypeResponse")]
        CmdbClient.CmsService.OperationResult UpdateItemType(CmdbClient.CmsService.ItemType itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/UpdateItemType", ReplyAction="http://tempuri.org/ICmsService/UpdateItemTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> UpdateItemTypeAsync(CmdbClient.CmsService.ItemType itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/UpdateItemAttribute", ReplyAction="http://tempuri.org/ICmsService/UpdateItemAttributeResponse")]
        CmdbClient.CmsService.OperationResult UpdateItemAttribute(CmdbClient.CmsService.ItemAttribute attribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/UpdateItemAttribute", ReplyAction="http://tempuri.org/ICmsService/UpdateItemAttributeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> UpdateItemAttributeAsync(CmdbClient.CmsService.ItemAttribute attribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/UpdateConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/UpdateConfigurationItemResponse")]
        CmdbClient.CmsService.OperationResult UpdateConfigurationItem(CmdbClient.CmsService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/UpdateConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/UpdateConfigurationItemResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> UpdateConfigurationItemAsync(CmdbClient.CmsService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/AbandonResponsibilityForConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/AbandonResponsibilityForConfigurationItemResponse")]
        CmdbClient.CmsService.OperationResult AbandonResponsibilityForConfigurationItem(CmdbClient.CmsService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/AbandonResponsibilityForConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/AbandonResponsibilityForConfigurationItemResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> AbandonResponsibilityForConfigurationItemAsync(CmdbClient.CmsService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteAttributeGroup", ReplyAction="http://tempuri.org/ICmsService/DeleteAttributeGroupResponse")]
        CmdbClient.CmsService.OperationResult DeleteAttributeGroup(CmdbClient.CmsService.AttributeGroup attributeGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteAttributeGroup", ReplyAction="http://tempuri.org/ICmsService/DeleteAttributeGroupResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteAttributeGroupAsync(CmdbClient.CmsService.AttributeGroup attributeGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteAttributeType", ReplyAction="http://tempuri.org/ICmsService/DeleteAttributeTypeResponse")]
        CmdbClient.CmsService.OperationResult DeleteAttributeType(CmdbClient.CmsService.AttributeType attributeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteAttributeType", ReplyAction="http://tempuri.org/ICmsService/DeleteAttributeTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteAttributeTypeAsync(CmdbClient.CmsService.AttributeType attributeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteConnectionRule", ReplyAction="http://tempuri.org/ICmsService/DeleteConnectionRuleResponse")]
        CmdbClient.CmsService.OperationResult DeleteConnectionRule(CmdbClient.CmsService.ConnectionRule connectionRule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteConnectionRule", ReplyAction="http://tempuri.org/ICmsService/DeleteConnectionRuleResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteConnectionRuleAsync(CmdbClient.CmsService.ConnectionRule connectionRule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteConnectionType", ReplyAction="http://tempuri.org/ICmsService/DeleteConnectionTypeResponse")]
        CmdbClient.CmsService.OperationResult DeleteConnectionType(CmdbClient.CmsService.ConnectionType connectionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteConnectionType", ReplyAction="http://tempuri.org/ICmsService/DeleteConnectionTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteConnectionTypeAsync(CmdbClient.CmsService.ConnectionType connectionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteItemType", ReplyAction="http://tempuri.org/ICmsService/DeleteItemTypeResponse")]
        CmdbClient.CmsService.OperationResult DeleteItemType(CmdbClient.CmsService.ItemType itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteItemType", ReplyAction="http://tempuri.org/ICmsService/DeleteItemTypeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteItemTypeAsync(CmdbClient.CmsService.ItemType itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/DeleteConfigurationItemResponse")]
        CmdbClient.CmsService.OperationResult DeleteConfigurationItem(CmdbClient.CmsService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteConfigurationItem", ReplyAction="http://tempuri.org/ICmsService/DeleteConfigurationItemResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteConfigurationItemAsync(CmdbClient.CmsService.ConfigurationItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteConnection", ReplyAction="http://tempuri.org/ICmsService/DeleteConnectionResponse")]
        CmdbClient.CmsService.OperationResult DeleteConnection(CmdbClient.CmsService.Connection connection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteConnection", ReplyAction="http://tempuri.org/ICmsService/DeleteConnectionResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteConnectionAsync(CmdbClient.CmsService.Connection connection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteItemAttribute", ReplyAction="http://tempuri.org/ICmsService/DeleteItemAttributeResponse")]
        CmdbClient.CmsService.OperationResult DeleteItemAttribute(CmdbClient.CmsService.ItemAttribute attribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteItemAttribute", ReplyAction="http://tempuri.org/ICmsService/DeleteItemAttributeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteItemAttributeAsync(CmdbClient.CmsService.ItemAttribute attribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteItemTypeAttributeGroupMapping", ReplyAction="http://tempuri.org/ICmsService/DeleteItemTypeAttributeGroupMappingResponse")]
        CmdbClient.CmsService.OperationResult DeleteItemTypeAttributeGroupMapping(CmdbClient.CmsService.ItemTypeAttributeGroupMapping itemTypeAttributeMapping);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteItemTypeAttributeGroupMapping", ReplyAction="http://tempuri.org/ICmsService/DeleteItemTypeAttributeGroupMappingResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteItemTypeAttributeGroupMappingAsync(CmdbClient.CmsService.ItemTypeAttributeGroupMapping itemTypeAttributeMapping);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateItemAttribute", ReplyAction="http://tempuri.org/ICmsService/CreateItemAttributeResponse")]
        CmdbClient.CmsService.OperationResult CreateItemAttribute(CmdbClient.CmsService.ItemAttribute attribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateItemAttribute", ReplyAction="http://tempuri.org/ICmsService/CreateItemAttributeResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateItemAttributeAsync(CmdbClient.CmsService.ItemAttribute attribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateConnection", ReplyAction="http://tempuri.org/ICmsService/CreateConnectionResponse")]
        CmdbClient.CmsService.OperationResult CreateConnection(CmdbClient.CmsService.Connection connection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateConnection", ReplyAction="http://tempuri.org/ICmsService/CreateConnectionResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateConnectionAsync(CmdbClient.CmsService.Connection connection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateLink", ReplyAction="http://tempuri.org/ICmsService/CreateLinkResponse")]
        CmdbClient.CmsService.OperationResult CreateLink(CmdbClient.CmsService.ItemLink link);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CreateLink", ReplyAction="http://tempuri.org/ICmsService/CreateLinkResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateLinkAsync(CmdbClient.CmsService.ItemLink link);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteLink", ReplyAction="http://tempuri.org/ICmsService/DeleteLinkResponse")]
        CmdbClient.CmsService.OperationResult DeleteLink(CmdbClient.CmsService.ItemLink link);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/DeleteLink", ReplyAction="http://tempuri.org/ICmsService/DeleteLinkResponse")]
        System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteLinkAsync(CmdbClient.CmsService.ItemLink link);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CanDeleteAttributeGroup", ReplyAction="http://tempuri.org/ICmsService/CanDeleteAttributeGroupResponse")]
        bool CanDeleteAttributeGroup(CmdbClient.CmsService.AttributeGroup attributeGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CanDeleteAttributeGroup", ReplyAction="http://tempuri.org/ICmsService/CanDeleteAttributeGroupResponse")]
        System.Threading.Tasks.Task<bool> CanDeleteAttributeGroupAsync(CmdbClient.CmsService.AttributeGroup attributeGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CanDeleteAttributeType", ReplyAction="http://tempuri.org/ICmsService/CanDeleteAttributeTypeResponse")]
        bool CanDeleteAttributeType(CmdbClient.CmsService.AttributeType attributeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CanDeleteAttributeType", ReplyAction="http://tempuri.org/ICmsService/CanDeleteAttributeTypeResponse")]
        System.Threading.Tasks.Task<bool> CanDeleteAttributeTypeAsync(CmdbClient.CmsService.AttributeType attributeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CanDeleteConnectionRule", ReplyAction="http://tempuri.org/ICmsService/CanDeleteConnectionRuleResponse")]
        bool CanDeleteConnectionRule(CmdbClient.CmsService.ConnectionRule connectionRule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CanDeleteConnectionRule", ReplyAction="http://tempuri.org/ICmsService/CanDeleteConnectionRuleResponse")]
        System.Threading.Tasks.Task<bool> CanDeleteConnectionRuleAsync(CmdbClient.CmsService.ConnectionRule connectionRule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CanDeleteConnectionType", ReplyAction="http://tempuri.org/ICmsService/CanDeleteConnectionTypeResponse")]
        bool CanDeleteConnectionType(CmdbClient.CmsService.ConnectionType connectionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CanDeleteConnectionType", ReplyAction="http://tempuri.org/ICmsService/CanDeleteConnectionTypeResponse")]
        System.Threading.Tasks.Task<bool> CanDeleteConnectionTypeAsync(CmdbClient.CmsService.ConnectionType connectionType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CanDeleteItemType", ReplyAction="http://tempuri.org/ICmsService/CanDeleteItemTypeResponse")]
        bool CanDeleteItemType(CmdbClient.CmsService.ItemType itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CanDeleteItemType", ReplyAction="http://tempuri.org/ICmsService/CanDeleteItemTypeResponse")]
        System.Threading.Tasks.Task<bool> CanDeleteItemTypeAsync(CmdbClient.CmsService.ItemType itemType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CanDeleteItemTypeAttributeGroupMapping", ReplyAction="http://tempuri.org/ICmsService/CanDeleteItemTypeAttributeGroupMappingResponse")]
        bool CanDeleteItemTypeAttributeGroupMapping(CmdbClient.CmsService.ItemTypeAttributeGroupMapping itemTypeAttributeMapping);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/CanDeleteItemTypeAttributeGroupMapping", ReplyAction="http://tempuri.org/ICmsService/CanDeleteItemTypeAttributeGroupMappingResponse")]
        System.Threading.Tasks.Task<bool> CanDeleteItemTypeAttributeGroupMappingAsync(CmdbClient.CmsService.ItemTypeAttributeGroupMapping itemTypeAttributeMapping);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionCountForConnectionRule", ReplyAction="http://tempuri.org/ICmsService/GetConnectionCountForConnectionRuleResponse")]
        int GetConnectionCountForConnectionRule(System.Guid ruleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetConnectionCountForConnectionRule", ReplyAction="http://tempuri.org/ICmsService/GetConnectionCountForConnectionRuleResponse")]
        System.Threading.Tasks.Task<int> GetConnectionCountForConnectionRuleAsync(System.Guid ruleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetItemAttributesCountForAttributeType", ReplyAction="http://tempuri.org/ICmsService/GetItemAttributesCountForAttributeTypeResponse")]
        int GetItemAttributesCountForAttributeType(System.Guid attributeType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICmsService/GetItemAttributesCountForAttributeType", ReplyAction="http://tempuri.org/ICmsService/GetItemAttributesCountForAttributeTypeResponse")]
        System.Threading.Tasks.Task<int> GetItemAttributesCountForAttributeTypeAsync(System.Guid attributeType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICmsServiceChannel : CmdbClient.CmsService.ICmsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CmsServiceClient : System.ServiceModel.ClientBase<CmdbClient.CmsService.ICmsService>, CmdbClient.CmsService.ICmsService {
        
        public CmsServiceClient() {
        }
        
        public CmsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CmsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CmsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CmsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetItemTypesCount() {
            return base.Channel.GetItemTypesCount();
        }
        
        public System.Threading.Tasks.Task<int> GetItemTypesCountAsync() {
            return base.Channel.GetItemTypesCountAsync();
        }
        
        public CmdbClient.CmsService.UserRole GetRoleForUser() {
            return base.Channel.GetRoleForUser();
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.UserRole> GetRoleForUserAsync() {
            return base.Channel.GetRoleForUserAsync();
        }
        
        public string Test() {
            return base.Channel.Test();
        }
        
        public System.Threading.Tasks.Task<string> TestAsync() {
            return base.Channel.TestAsync();
        }
        
        public CmdbClient.CmsService.Item GetItem(string itemId) {
            return base.Channel.GetItem(itemId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.Item> GetItemAsync(string itemId) {
            return base.Channel.GetItemAsync(itemId);
        }
        
        public CmdbClient.CmsService.ConfigurationItem GetConfigurationItem(System.Guid itemId) {
            return base.Channel.GetConfigurationItem(itemId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem> GetConfigurationItemAsync(System.Guid itemId) {
            return base.Channel.GetConfigurationItemAsync(itemId);
        }
        
        public CmdbClient.CmsService.ConfigurationItem[] GetConfigurationItems() {
            return base.Channel.GetConfigurationItems();
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem[]> GetConfigurationItemsAsync() {
            return base.Channel.GetConfigurationItemsAsync();
        }
        
        public CmdbClient.CmsService.ConfigurationItem[] SearchConfigurationItems(CmdbClient.CmsService.Search search) {
            return base.Channel.SearchConfigurationItems(search);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem[]> SearchConfigurationItemsAsync(CmdbClient.CmsService.Search search) {
            return base.Channel.SearchConfigurationItemsAsync(search);
        }
        
        public CmdbClient.CmsService.NeighborItem[] SearchNeighborConfigurationItems(CmdbClient.CmsService.NeighborSearch search) {
            return base.Channel.SearchNeighborConfigurationItems(search);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.NeighborItem[]> SearchNeighborConfigurationItemsAsync(CmdbClient.CmsService.NeighborSearch search) {
            return base.Channel.SearchNeighborConfigurationItemsAsync(search);
        }
        
        public CmdbClient.CmsService.ConfigurationItem[] GetConfigurationItemsByType(System.Guid[] typeId) {
            return base.Channel.GetConfigurationItemsByType(typeId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem[]> GetConfigurationItemsByTypeAsync(System.Guid[] typeId) {
            return base.Channel.GetConfigurationItemsByTypeAsync(typeId);
        }
        
        public CmdbClient.CmsService.ConfigurationItem[] GetConfigurationItemsByTypeName(string[] typeName) {
            return base.Channel.GetConfigurationItemsByTypeName(typeName);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem[]> GetConfigurationItemsByTypeNameAsync(string[] typeName) {
            return base.Channel.GetConfigurationItemsByTypeNameAsync(typeName);
        }
        
        public CmdbClient.CmsService.ConfigurationItem GetConfigurationItemByTypeIdAndName(System.Guid itemType, string itemName) {
            return base.Channel.GetConfigurationItemByTypeIdAndName(itemType, itemName);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem> GetConfigurationItemByTypeIdAndNameAsync(System.Guid itemType, string itemName) {
            return base.Channel.GetConfigurationItemByTypeIdAndNameAsync(itemType, itemName);
        }
        
        public CmdbClient.CmsService.ConfigurationItem[] GetConfigurationItemsConnectableAsLowerItem(System.Guid itemId, System.Guid ruleId) {
            return base.Channel.GetConfigurationItemsConnectableAsLowerItem(itemId, ruleId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem[]> GetConfigurationItemsConnectableAsLowerItemAsync(System.Guid itemId, System.Guid ruleId) {
            return base.Channel.GetConfigurationItemsConnectableAsLowerItemAsync(itemId, ruleId);
        }
        
        public CmdbClient.CmsService.ConfigurationItem[] GetConfigurationItemsConnectableAsUpperItem(System.Guid itemId, System.Guid ruleId) {
            return base.Channel.GetConfigurationItemsConnectableAsUpperItem(itemId, ruleId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConfigurationItem[]> GetConfigurationItemsConnectableAsUpperItemAsync(System.Guid itemId, System.Guid ruleId) {
            return base.Channel.GetConfigurationItemsConnectableAsUpperItemAsync(itemId, ruleId);
        }
        
        public CmdbClient.CmsService.ItemResponsibility[] GetResponsibilitesForConfigurationItem(CmdbClient.CmsService.ConfigurationItem item) {
            return base.Channel.GetResponsibilitesForConfigurationItem(item);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ItemResponsibility[]> GetResponsibilitesForConfigurationItemAsync(CmdbClient.CmsService.ConfigurationItem item) {
            return base.Channel.GetResponsibilitesForConfigurationItemAsync(item);
        }
        
        public CmdbClient.CmsService.ItemAttribute[] GetAttributesForConfigurationItem(System.Guid itemId) {
            return base.Channel.GetAttributesForConfigurationItem(itemId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ItemAttribute[]> GetAttributesForConfigurationItemAsync(System.Guid itemId) {
            return base.Channel.GetAttributesForConfigurationItemAsync(itemId);
        }
        
        public CmdbClient.CmsService.ItemAttribute[] GetAttributesForAttributeType(System.Guid attributeTypeId) {
            return base.Channel.GetAttributesForAttributeType(attributeTypeId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ItemAttribute[]> GetAttributesForAttributeTypeAsync(System.Guid attributeTypeId) {
            return base.Channel.GetAttributesForAttributeTypeAsync(attributeTypeId);
        }
        
        public CmdbClient.CmsService.ItemAttribute GetAttribute(System.Guid attributeId) {
            return base.Channel.GetAttribute(attributeId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ItemAttribute> GetAttributeAsync(System.Guid attributeId) {
            return base.Channel.GetAttributeAsync(attributeId);
        }
        
        public CmdbClient.CmsService.ItemAttribute GetAttributeForConfigurationItemByAttributeType(System.Guid itemId, System.Guid typeId) {
            return base.Channel.GetAttributeForConfigurationItemByAttributeType(itemId, typeId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ItemAttribute> GetAttributeForConfigurationItemByAttributeTypeAsync(System.Guid itemId, System.Guid typeId) {
            return base.Channel.GetAttributeForConfigurationItemByAttributeTypeAsync(itemId, typeId);
        }
        
        public CmdbClient.CmsService.ItemAttribute GetAttributeForConfigurationItemByAttributeTypeName(System.Guid itemId, string typeName) {
            return base.Channel.GetAttributeForConfigurationItemByAttributeTypeName(itemId, typeName);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ItemAttribute> GetAttributeForConfigurationItemByAttributeTypeNameAsync(System.Guid itemId, string typeName) {
            return base.Channel.GetAttributeForConfigurationItemByAttributeTypeNameAsync(itemId, typeName);
        }
        
        public CmdbClient.CmsService.Connection[] GetConnectionsForItem(System.Guid itemId) {
            return base.Channel.GetConnectionsForItem(itemId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.Connection[]> GetConnectionsForItemAsync(System.Guid itemId) {
            return base.Channel.GetConnectionsForItemAsync(itemId);
        }
        
        public CmdbClient.CmsService.Connection[] GetConnectionsToLowerForItem(System.Guid itemId) {
            return base.Channel.GetConnectionsToLowerForItem(itemId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.Connection[]> GetConnectionsToLowerForItemAsync(System.Guid itemId) {
            return base.Channel.GetConnectionsToLowerForItemAsync(itemId);
        }
        
        public CmdbClient.CmsService.Connection[] GetConnectionsToUpperForItem(System.Guid itemId) {
            return base.Channel.GetConnectionsToUpperForItem(itemId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.Connection[]> GetConnectionsToUpperForItemAsync(System.Guid itemId) {
            return base.Channel.GetConnectionsToUpperForItemAsync(itemId);
        }
        
        public CmdbClient.CmsService.Connection GetConnectionByContent(System.Guid upperItemId, System.Guid connectionTypeId, System.Guid lowerItemId) {
            return base.Channel.GetConnectionByContent(upperItemId, connectionTypeId, lowerItemId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.Connection> GetConnectionByContentAsync(System.Guid upperItemId, System.Guid connectionTypeId, System.Guid lowerItemId) {
            return base.Channel.GetConnectionByContentAsync(upperItemId, connectionTypeId, lowerItemId);
        }
        
        public CmdbClient.CmsService.ItemLink[] GetLinksForConfigurationItem(System.Guid itemId) {
            return base.Channel.GetLinksForConfigurationItem(itemId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ItemLink[]> GetLinksForConfigurationItemAsync(System.Guid itemId) {
            return base.Channel.GetLinksForConfigurationItemAsync(itemId);
        }
        
        public CmdbClient.CmsService.Connection GetConnection(System.Guid connId) {
            return base.Channel.GetConnection(connId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.Connection> GetConnectionAsync(System.Guid connId) {
            return base.Channel.GetConnectionAsync(connId);
        }
        
        public CmdbClient.CmsService.AttributeGroup[] GetAttributeGroups() {
            return base.Channel.GetAttributeGroups();
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeGroup[]> GetAttributeGroupsAsync() {
            return base.Channel.GetAttributeGroupsAsync();
        }
        
        public CmdbClient.CmsService.AttributeGroup GetAttributeGroup(System.Guid id) {
            return base.Channel.GetAttributeGroup(id);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeGroup> GetAttributeGroupAsync(System.Guid id) {
            return base.Channel.GetAttributeGroupAsync(id);
        }
        
        public CmdbClient.CmsService.AttributeGroup[] GetAttributeGroupsAssignedToItemType(System.Guid itemType) {
            return base.Channel.GetAttributeGroupsAssignedToItemType(itemType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeGroup[]> GetAttributeGroupsAssignedToItemTypeAsync(System.Guid itemType) {
            return base.Channel.GetAttributeGroupsAssignedToItemTypeAsync(itemType);
        }
        
        public CmdbClient.CmsService.AttributeGroup[] GetAttributeGroupsNotAssignedToItemType(System.Guid itemType) {
            return base.Channel.GetAttributeGroupsNotAssignedToItemType(itemType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeGroup[]> GetAttributeGroupsNotAssignedToItemTypeAsync(System.Guid itemType) {
            return base.Channel.GetAttributeGroupsNotAssignedToItemTypeAsync(itemType);
        }
        
        public CmdbClient.CmsService.AttributeType[] GetAttributeTypes() {
            return base.Channel.GetAttributeTypes();
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeType[]> GetAttributeTypesAsync() {
            return base.Channel.GetAttributeTypesAsync();
        }
        
        public CmdbClient.CmsService.AttributeType GetAttributeType(System.Guid id) {
            return base.Channel.GetAttributeType(id);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeType> GetAttributeTypeAsync(System.Guid id) {
            return base.Channel.GetAttributeTypeAsync(id);
        }
        
        public CmdbClient.CmsService.AttributeType[] GetAttributeTypesForAttributeGroup(CmdbClient.CmsService.AttributeGroup group) {
            return base.Channel.GetAttributeTypesForAttributeGroup(group);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeType[]> GetAttributeTypesForAttributeGroupAsync(CmdbClient.CmsService.AttributeGroup group) {
            return base.Channel.GetAttributeTypesForAttributeGroupAsync(group);
        }
        
        public CmdbClient.CmsService.AttributeType[] GetAttributeTypesForItemType(System.Guid itemTypeId) {
            return base.Channel.GetAttributeTypesForItemType(itemTypeId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeType[]> GetAttributeTypesForItemTypeAsync(System.Guid itemTypeId) {
            return base.Channel.GetAttributeTypesForItemTypeAsync(itemTypeId);
        }
        
        public CmdbClient.CmsService.AttributeType[] GetAttributeTypesForCorrespondingValuesOfType(System.Guid attributeTypeId) {
            return base.Channel.GetAttributeTypesForCorrespondingValuesOfType(attributeTypeId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.AttributeType[]> GetAttributeTypesForCorrespondingValuesOfTypeAsync(System.Guid attributeTypeId) {
            return base.Channel.GetAttributeTypesForCorrespondingValuesOfTypeAsync(attributeTypeId);
        }
        
        public CmdbClient.CmsService.ConnectionType[] GetAllowedDownwardConnnectionTypesForItemType(System.Guid itemTypeId) {
            return base.Channel.GetAllowedDownwardConnnectionTypesForItemType(itemTypeId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionType[]> GetAllowedDownwardConnnectionTypesForItemTypeAsync(System.Guid itemTypeId) {
            return base.Channel.GetAllowedDownwardConnnectionTypesForItemTypeAsync(itemTypeId);
        }
        
        public CmdbClient.CmsService.ItemType[] GetLowerItemTypeForUpperItemTypeAndConnectionType(System.Guid upperItemTypeId, System.Guid connectionTypeId) {
            return base.Channel.GetLowerItemTypeForUpperItemTypeAndConnectionType(upperItemTypeId, connectionTypeId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ItemType[]> GetLowerItemTypeForUpperItemTypeAndConnectionTypeAsync(System.Guid upperItemTypeId, System.Guid connectionTypeId) {
            return base.Channel.GetLowerItemTypeForUpperItemTypeAndConnectionTypeAsync(upperItemTypeId, connectionTypeId);
        }
        
        public CmdbClient.CmsService.ItemType[] GetUpperItemTypeForLowerItemTypeAndConnectionType(System.Guid lowerItemTypeId, System.Guid connectionTypeId) {
            return base.Channel.GetUpperItemTypeForLowerItemTypeAndConnectionType(lowerItemTypeId, connectionTypeId);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ItemType[]> GetUpperItemTypeForLowerItemTypeAndConnectionTypeAsync(System.Guid lowerItemTypeId, System.Guid connectionTypeId) {
            return base.Channel.GetUpperItemTypeForLowerItemTypeAndConnectionTypeAsync(lowerItemTypeId, connectionTypeId);
        }
        
        public CmdbClient.CmsService.ConnectionRule[] GetConnectionRules() {
            return base.Channel.GetConnectionRules();
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionRule[]> GetConnectionRulesAsync() {
            return base.Channel.GetConnectionRulesAsync();
        }
        
        public CmdbClient.CmsService.ConnectionRule[] GetConnectionRulesForItemType(System.Guid itemType) {
            return base.Channel.GetConnectionRulesForItemType(itemType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionRule[]> GetConnectionRulesForItemTypeAsync(System.Guid itemType) {
            return base.Channel.GetConnectionRulesForItemTypeAsync(itemType);
        }
        
        public CmdbClient.CmsService.ConnectionRule[] GetConnectionRulesByUpperItemType(System.Guid itemType) {
            return base.Channel.GetConnectionRulesByUpperItemType(itemType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionRule[]> GetConnectionRulesByUpperItemTypeAsync(System.Guid itemType) {
            return base.Channel.GetConnectionRulesByUpperItemTypeAsync(itemType);
        }
        
        public CmdbClient.CmsService.ConnectionRule[] GetConnectionRulesByLowerItemType(System.Guid itemType) {
            return base.Channel.GetConnectionRulesByLowerItemType(itemType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionRule[]> GetConnectionRulesByLowerItemTypeAsync(System.Guid itemType) {
            return base.Channel.GetConnectionRulesByLowerItemTypeAsync(itemType);
        }
        
        public CmdbClient.CmsService.ConnectionRule GetConnectionRule(System.Guid id) {
            return base.Channel.GetConnectionRule(id);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionRule> GetConnectionRuleAsync(System.Guid id) {
            return base.Channel.GetConnectionRuleAsync(id);
        }
        
        public CmdbClient.CmsService.ConnectionRule GetConnectionRuleByContent(System.Guid upperItemType, System.Guid connectionType, System.Guid lowerItemType) {
            return base.Channel.GetConnectionRuleByContent(upperItemType, connectionType, lowerItemType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionRule> GetConnectionRuleByContentAsync(System.Guid upperItemType, System.Guid connectionType, System.Guid lowerItemType) {
            return base.Channel.GetConnectionRuleByContentAsync(upperItemType, connectionType, lowerItemType);
        }
        
        public CmdbClient.CmsService.ConnectionRule[] GetConnectionRulesByUpperAndLowerItemType(System.Guid upperItemType, System.Guid lowerItemType) {
            return base.Channel.GetConnectionRulesByUpperAndLowerItemType(upperItemType, lowerItemType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionRule[]> GetConnectionRulesByUpperAndLowerItemTypeAsync(System.Guid upperItemType, System.Guid lowerItemType) {
            return base.Channel.GetConnectionRulesByUpperAndLowerItemTypeAsync(upperItemType, lowerItemType);
        }
        
        public CmdbClient.CmsService.ConnectionType[] GetConnectionTypes() {
            return base.Channel.GetConnectionTypes();
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionType[]> GetConnectionTypesAsync() {
            return base.Channel.GetConnectionTypesAsync();
        }
        
        public CmdbClient.CmsService.ConnectionType GetConnectionType(System.Guid id) {
            return base.Channel.GetConnectionType(id);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ConnectionType> GetConnectionTypeAsync(System.Guid id) {
            return base.Channel.GetConnectionTypeAsync(id);
        }
        
        public CmdbClient.CmsService.ItemType[] GetItemTypes() {
            return base.Channel.GetItemTypes();
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ItemType[]> GetItemTypesAsync() {
            return base.Channel.GetItemTypesAsync();
        }
        
        public CmdbClient.CmsService.ItemType GetItemType(System.Guid id) {
            return base.Channel.GetItemType(id);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ItemType> GetItemTypeAsync(System.Guid id) {
            return base.Channel.GetItemTypeAsync(id);
        }
        
        public CmdbClient.CmsService.ItemType[] GetItemTypesByAllowedAttributeType(System.Guid id) {
            return base.Channel.GetItemTypesByAllowedAttributeType(id);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ItemType[]> GetItemTypesByAllowedAttributeTypeAsync(System.Guid id) {
            return base.Channel.GetItemTypesByAllowedAttributeTypeAsync(id);
        }
        
        public CmdbClient.CmsService.ItemTypeAttributeGroupMapping[] GetItemTypeAttributeGroupMappings() {
            return base.Channel.GetItemTypeAttributeGroupMappings();
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.ItemTypeAttributeGroupMapping[]> GetItemTypeAttributeGroupMappingsAsync() {
            return base.Channel.GetItemTypeAttributeGroupMappingsAsync();
        }
        
        public CmdbClient.CmsService.OperationResult TakeResponsibilityForConfigurationItem(CmdbClient.CmsService.ConfigurationItem item) {
            return base.Channel.TakeResponsibilityForConfigurationItem(item);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> TakeResponsibilityForConfigurationItemAsync(CmdbClient.CmsService.ConfigurationItem item) {
            return base.Channel.TakeResponsibilityForConfigurationItemAsync(item);
        }
        
        public CmdbClient.CmsService.OperationResult CreateAttributeGroup(CmdbClient.CmsService.AttributeGroup attributeGroup) {
            return base.Channel.CreateAttributeGroup(attributeGroup);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateAttributeGroupAsync(CmdbClient.CmsService.AttributeGroup attributeGroup) {
            return base.Channel.CreateAttributeGroupAsync(attributeGroup);
        }
        
        public CmdbClient.CmsService.OperationResult CreateAttributeType(CmdbClient.CmsService.AttributeType attributeType) {
            return base.Channel.CreateAttributeType(attributeType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateAttributeTypeAsync(CmdbClient.CmsService.AttributeType attributeType) {
            return base.Channel.CreateAttributeTypeAsync(attributeType);
        }
        
        public CmdbClient.CmsService.OperationResult CreateConnectionRule(CmdbClient.CmsService.ConnectionRule connectionRule) {
            return base.Channel.CreateConnectionRule(connectionRule);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateConnectionRuleAsync(CmdbClient.CmsService.ConnectionRule connectionRule) {
            return base.Channel.CreateConnectionRuleAsync(connectionRule);
        }
        
        public CmdbClient.CmsService.OperationResult CreateConnectionType(CmdbClient.CmsService.ConnectionType connectionType) {
            return base.Channel.CreateConnectionType(connectionType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateConnectionTypeAsync(CmdbClient.CmsService.ConnectionType connectionType) {
            return base.Channel.CreateConnectionTypeAsync(connectionType);
        }
        
        public CmdbClient.CmsService.OperationResult CreateItemType(CmdbClient.CmsService.ItemType itemType) {
            return base.Channel.CreateItemType(itemType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateItemTypeAsync(CmdbClient.CmsService.ItemType itemType) {
            return base.Channel.CreateItemTypeAsync(itemType);
        }
        
        public CmdbClient.CmsService.OperationResult CreateItemTypeAttributeGroupMapping(CmdbClient.CmsService.ItemTypeAttributeGroupMapping itemTypeAttributeMapping) {
            return base.Channel.CreateItemTypeAttributeGroupMapping(itemTypeAttributeMapping);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateItemTypeAttributeGroupMappingAsync(CmdbClient.CmsService.ItemTypeAttributeGroupMapping itemTypeAttributeMapping) {
            return base.Channel.CreateItemTypeAttributeGroupMappingAsync(itemTypeAttributeMapping);
        }
        
        public CmdbClient.CmsService.OperationResult CreateConfigurationItem(CmdbClient.CmsService.ConfigurationItem item) {
            return base.Channel.CreateConfigurationItem(item);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateConfigurationItemAsync(CmdbClient.CmsService.ConfigurationItem item) {
            return base.Channel.CreateConfigurationItemAsync(item);
        }
        
        public CmdbClient.CmsService.OperationResult UpdateAttributeGroup(CmdbClient.CmsService.AttributeGroup attributeGroup) {
            return base.Channel.UpdateAttributeGroup(attributeGroup);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> UpdateAttributeGroupAsync(CmdbClient.CmsService.AttributeGroup attributeGroup) {
            return base.Channel.UpdateAttributeGroupAsync(attributeGroup);
        }
        
        public CmdbClient.CmsService.OperationResult UpdateAttributeType(CmdbClient.CmsService.AttributeType attributeType) {
            return base.Channel.UpdateAttributeType(attributeType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> UpdateAttributeTypeAsync(CmdbClient.CmsService.AttributeType attributeType) {
            return base.Channel.UpdateAttributeTypeAsync(attributeType);
        }
        
        public CmdbClient.CmsService.OperationResult UpdateConnectionRule(CmdbClient.CmsService.ConnectionRule connectionRule) {
            return base.Channel.UpdateConnectionRule(connectionRule);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> UpdateConnectionRuleAsync(CmdbClient.CmsService.ConnectionRule connectionRule) {
            return base.Channel.UpdateConnectionRuleAsync(connectionRule);
        }
        
        public CmdbClient.CmsService.OperationResult UpdateConnectionType(CmdbClient.CmsService.ConnectionType connectionType) {
            return base.Channel.UpdateConnectionType(connectionType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> UpdateConnectionTypeAsync(CmdbClient.CmsService.ConnectionType connectionType) {
            return base.Channel.UpdateConnectionTypeAsync(connectionType);
        }
        
        public CmdbClient.CmsService.OperationResult UpdateItemType(CmdbClient.CmsService.ItemType itemType) {
            return base.Channel.UpdateItemType(itemType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> UpdateItemTypeAsync(CmdbClient.CmsService.ItemType itemType) {
            return base.Channel.UpdateItemTypeAsync(itemType);
        }
        
        public CmdbClient.CmsService.OperationResult UpdateItemAttribute(CmdbClient.CmsService.ItemAttribute attribute) {
            return base.Channel.UpdateItemAttribute(attribute);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> UpdateItemAttributeAsync(CmdbClient.CmsService.ItemAttribute attribute) {
            return base.Channel.UpdateItemAttributeAsync(attribute);
        }
        
        public CmdbClient.CmsService.OperationResult UpdateConfigurationItem(CmdbClient.CmsService.ConfigurationItem item) {
            return base.Channel.UpdateConfigurationItem(item);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> UpdateConfigurationItemAsync(CmdbClient.CmsService.ConfigurationItem item) {
            return base.Channel.UpdateConfigurationItemAsync(item);
        }
        
        public CmdbClient.CmsService.OperationResult AbandonResponsibilityForConfigurationItem(CmdbClient.CmsService.ConfigurationItem item) {
            return base.Channel.AbandonResponsibilityForConfigurationItem(item);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> AbandonResponsibilityForConfigurationItemAsync(CmdbClient.CmsService.ConfigurationItem item) {
            return base.Channel.AbandonResponsibilityForConfigurationItemAsync(item);
        }
        
        public CmdbClient.CmsService.OperationResult DeleteAttributeGroup(CmdbClient.CmsService.AttributeGroup attributeGroup) {
            return base.Channel.DeleteAttributeGroup(attributeGroup);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteAttributeGroupAsync(CmdbClient.CmsService.AttributeGroup attributeGroup) {
            return base.Channel.DeleteAttributeGroupAsync(attributeGroup);
        }
        
        public CmdbClient.CmsService.OperationResult DeleteAttributeType(CmdbClient.CmsService.AttributeType attributeType) {
            return base.Channel.DeleteAttributeType(attributeType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteAttributeTypeAsync(CmdbClient.CmsService.AttributeType attributeType) {
            return base.Channel.DeleteAttributeTypeAsync(attributeType);
        }
        
        public CmdbClient.CmsService.OperationResult DeleteConnectionRule(CmdbClient.CmsService.ConnectionRule connectionRule) {
            return base.Channel.DeleteConnectionRule(connectionRule);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteConnectionRuleAsync(CmdbClient.CmsService.ConnectionRule connectionRule) {
            return base.Channel.DeleteConnectionRuleAsync(connectionRule);
        }
        
        public CmdbClient.CmsService.OperationResult DeleteConnectionType(CmdbClient.CmsService.ConnectionType connectionType) {
            return base.Channel.DeleteConnectionType(connectionType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteConnectionTypeAsync(CmdbClient.CmsService.ConnectionType connectionType) {
            return base.Channel.DeleteConnectionTypeAsync(connectionType);
        }
        
        public CmdbClient.CmsService.OperationResult DeleteItemType(CmdbClient.CmsService.ItemType itemType) {
            return base.Channel.DeleteItemType(itemType);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteItemTypeAsync(CmdbClient.CmsService.ItemType itemType) {
            return base.Channel.DeleteItemTypeAsync(itemType);
        }
        
        public CmdbClient.CmsService.OperationResult DeleteConfigurationItem(CmdbClient.CmsService.ConfigurationItem item) {
            return base.Channel.DeleteConfigurationItem(item);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteConfigurationItemAsync(CmdbClient.CmsService.ConfigurationItem item) {
            return base.Channel.DeleteConfigurationItemAsync(item);
        }
        
        public CmdbClient.CmsService.OperationResult DeleteConnection(CmdbClient.CmsService.Connection connection) {
            return base.Channel.DeleteConnection(connection);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteConnectionAsync(CmdbClient.CmsService.Connection connection) {
            return base.Channel.DeleteConnectionAsync(connection);
        }
        
        public CmdbClient.CmsService.OperationResult DeleteItemAttribute(CmdbClient.CmsService.ItemAttribute attribute) {
            return base.Channel.DeleteItemAttribute(attribute);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteItemAttributeAsync(CmdbClient.CmsService.ItemAttribute attribute) {
            return base.Channel.DeleteItemAttributeAsync(attribute);
        }
        
        public CmdbClient.CmsService.OperationResult DeleteItemTypeAttributeGroupMapping(CmdbClient.CmsService.ItemTypeAttributeGroupMapping itemTypeAttributeMapping) {
            return base.Channel.DeleteItemTypeAttributeGroupMapping(itemTypeAttributeMapping);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteItemTypeAttributeGroupMappingAsync(CmdbClient.CmsService.ItemTypeAttributeGroupMapping itemTypeAttributeMapping) {
            return base.Channel.DeleteItemTypeAttributeGroupMappingAsync(itemTypeAttributeMapping);
        }
        
        public CmdbClient.CmsService.OperationResult CreateItemAttribute(CmdbClient.CmsService.ItemAttribute attribute) {
            return base.Channel.CreateItemAttribute(attribute);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateItemAttributeAsync(CmdbClient.CmsService.ItemAttribute attribute) {
            return base.Channel.CreateItemAttributeAsync(attribute);
        }
        
        public CmdbClient.CmsService.OperationResult CreateConnection(CmdbClient.CmsService.Connection connection) {
            return base.Channel.CreateConnection(connection);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateConnectionAsync(CmdbClient.CmsService.Connection connection) {
            return base.Channel.CreateConnectionAsync(connection);
        }
        
        public CmdbClient.CmsService.OperationResult CreateLink(CmdbClient.CmsService.ItemLink link) {
            return base.Channel.CreateLink(link);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> CreateLinkAsync(CmdbClient.CmsService.ItemLink link) {
            return base.Channel.CreateLinkAsync(link);
        }
        
        public CmdbClient.CmsService.OperationResult DeleteLink(CmdbClient.CmsService.ItemLink link) {
            return base.Channel.DeleteLink(link);
        }
        
        public System.Threading.Tasks.Task<CmdbClient.CmsService.OperationResult> DeleteLinkAsync(CmdbClient.CmsService.ItemLink link) {
            return base.Channel.DeleteLinkAsync(link);
        }
        
        public bool CanDeleteAttributeGroup(CmdbClient.CmsService.AttributeGroup attributeGroup) {
            return base.Channel.CanDeleteAttributeGroup(attributeGroup);
        }
        
        public System.Threading.Tasks.Task<bool> CanDeleteAttributeGroupAsync(CmdbClient.CmsService.AttributeGroup attributeGroup) {
            return base.Channel.CanDeleteAttributeGroupAsync(attributeGroup);
        }
        
        public bool CanDeleteAttributeType(CmdbClient.CmsService.AttributeType attributeType) {
            return base.Channel.CanDeleteAttributeType(attributeType);
        }
        
        public System.Threading.Tasks.Task<bool> CanDeleteAttributeTypeAsync(CmdbClient.CmsService.AttributeType attributeType) {
            return base.Channel.CanDeleteAttributeTypeAsync(attributeType);
        }
        
        public bool CanDeleteConnectionRule(CmdbClient.CmsService.ConnectionRule connectionRule) {
            return base.Channel.CanDeleteConnectionRule(connectionRule);
        }
        
        public System.Threading.Tasks.Task<bool> CanDeleteConnectionRuleAsync(CmdbClient.CmsService.ConnectionRule connectionRule) {
            return base.Channel.CanDeleteConnectionRuleAsync(connectionRule);
        }
        
        public bool CanDeleteConnectionType(CmdbClient.CmsService.ConnectionType connectionType) {
            return base.Channel.CanDeleteConnectionType(connectionType);
        }
        
        public System.Threading.Tasks.Task<bool> CanDeleteConnectionTypeAsync(CmdbClient.CmsService.ConnectionType connectionType) {
            return base.Channel.CanDeleteConnectionTypeAsync(connectionType);
        }
        
        public bool CanDeleteItemType(CmdbClient.CmsService.ItemType itemType) {
            return base.Channel.CanDeleteItemType(itemType);
        }
        
        public System.Threading.Tasks.Task<bool> CanDeleteItemTypeAsync(CmdbClient.CmsService.ItemType itemType) {
            return base.Channel.CanDeleteItemTypeAsync(itemType);
        }
        
        public bool CanDeleteItemTypeAttributeGroupMapping(CmdbClient.CmsService.ItemTypeAttributeGroupMapping itemTypeAttributeMapping) {
            return base.Channel.CanDeleteItemTypeAttributeGroupMapping(itemTypeAttributeMapping);
        }
        
        public System.Threading.Tasks.Task<bool> CanDeleteItemTypeAttributeGroupMappingAsync(CmdbClient.CmsService.ItemTypeAttributeGroupMapping itemTypeAttributeMapping) {
            return base.Channel.CanDeleteItemTypeAttributeGroupMappingAsync(itemTypeAttributeMapping);
        }
        
        public int GetConnectionCountForConnectionRule(System.Guid ruleId) {
            return base.Channel.GetConnectionCountForConnectionRule(ruleId);
        }
        
        public System.Threading.Tasks.Task<int> GetConnectionCountForConnectionRuleAsync(System.Guid ruleId) {
            return base.Channel.GetConnectionCountForConnectionRuleAsync(ruleId);
        }
        
        public int GetItemAttributesCountForAttributeType(System.Guid attributeType) {
            return base.Channel.GetItemAttributesCountForAttributeType(attributeType);
        }
        
        public System.Threading.Tasks.Task<int> GetItemAttributesCountForAttributeTypeAsync(System.Guid attributeType) {
            return base.Channel.GetItemAttributesCountForAttributeTypeAsync(attributeType);
        }
    }
}
