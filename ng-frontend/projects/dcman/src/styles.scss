@use "sass:color";
@use "_variables.scss";

* {
    box-sizing: border-box;
}

html, body { height: 100%; }

body {
    color: variables.$main-color;
    background-color: variables.$body-background-color;
    margin: 0;
    margin-top: 4.5rem;
    font-family: Roboto, Verdana, Helvetica, sans-serif;
}

.relative {
    position: relative;
}

.flex {
    display: flex;
}

.grid {
    display: grid;
}

.space-between {
    justify-content: space-between;
}

.flex-column {
    @extend .flex;
    flex-direction: column;
}

.flex-row {
    @extend .flex;
    flex-direction: row;
}

.flex-nowrap {
    flex-wrap: nowrap;
}

.flex-wrap {
    flex-wrap: wrap;
}

.align-center {
    align-items: center;
}

.full-height {
    height: 100%;
}

.upper-right {
    position: absolute;
    right: 1rem;
    top: 1rem;
    z-index: 1;
}

.bold {
    font-weight: bold;
}

.selected {
    background-color: #84c566;
}

.button {
    text-align: center;
    border: 0.05rem outset darkgray;
    padding: 0.5rem 0.5rem 1rem 0.5rem;
}

.scrollable-x {
    overflow-x: auto;
    scroll-behavior: smooth;
}

.margin-left {
    margin-left: 1rem;
}

.grid-2 {
    grid-template-columns: auto auto;
}

.text-nowrap {
    white-space: nowrap;
}

.panel {
    padding: 0.5rem;
}

.red {
    color: #D00000;
}

.li-triangle:before { 
    content: "";
    border-color: transparent #111;
    border-style: solid;
    border-width: 0.35rem 0 0.35rem 0.45rem;
    display: block;
    height: 0;
    width: 0;
    left: -1.3rem;
    top: 0.9rem;
    position: relative;
}

.header {
    position: fixed;
    min-width: 5rem;
    width: calc(100% - 3rem);
    top: 0;
    margin: 0 1.5rem 2rem 1.5rem;
    padding: 0 1rem 0.3rem 1rem;
    display: flex;
    flex-direction: column;
    background-color: variables.$element-background-color;
    z-index: 2;
    box-shadow: variables.$box-shadow-small;

    @media print {
        display: none;
    }

    @media (min-width: 37rem) {
        flex-direction: row;
        min-width: 20rem;
        justify-content: flex-end;
    }
    
    .header-item {
        display: none;
        border: 2px variables.$main-border-color dotted;
        padding: 0.2rem 0.5rem;
        margin: 0 0.1rem;
        font-weight: bold;
        font-size: 1.1rem;
        a {
            color: variables.$main-color;
            text-decoration: none;
        }
        &.menu-open {
            display: block;
        }

        @media (min-width: 37rem) {
            display: block;
        }
    }

    .menu-button {
        width: 3rem;
        background: transparent;
        border: none;
        cursor: pointer;
        padding-top: 0;
        padding-bottom: 0;
        vertical-align: middle;
    
        &:focus {
            outline: none;
        }
    
        .menu-bar {
            width: 100%;
            height: 0.2rem;
            background: variables.$main-border-color;
            display: block;
            margin: 0.6rem 0;
    
        }

        @media (min-width: 37rem) {
            display: none;
        }
    }
    
    }

.dropdown-toggle {
    cursor: pointer;
    &::after {
        vertical-align: 0;
        display: inline-block;
        width: 0;
        height: 0;
        margin-left: .255em;
        vertical-align: .255em;
        content: "";
        border-top: .3em solid;
        border-right: .3em solid transparent;
        border-bottom: 0;
        border-left: .3em solid transparent;
    }
}

.dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: variables.$zindex-dropdown;
    display: none; // none by default, but block on "open" of the menu
    float: left;
    min-width: variables.$dropdown-min-width;
    padding: variables.$dropdown-padding-y 0;
    margin: variables.$dropdown-spacer 0 0; // override default ul
    font-size: variables.$font-size-base; // Redeclare because nesting can cause inheritance issues
    color: variables.$body-background-color;
    text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
    list-style: none;
    background-color: variables.$dropdown-bg;
    background-clip: padding-box;
    border: variables.$dropdown-border-width solid variables.$dropdown-border-color;
}

.open .dropdown-menu {
    display: block;
}
 
.dropdown-item {
    display: block;
    // width: 100%;
    padding: .25rem 1.5rem;
    clear: both;
    font-weight: 400;
    text-decoration: none;
    color: #212529;
    text-align: inherit;
    white-space: nowrap;
    background-color: transparent;
    border: 0;
    cursor: pointer;
}

.backdrop {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 4;
}

.overlay {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: color.adjust(wheat, $lightness: 10%);
    border: 1px solid darkblue;
    border-radius: 1rem;
    padding: 2rem;
    box-shadow: 0.5rem 0.5rem 0.5rem;
    z-index: 5;
    min-width: 20rem;
    max-width: 90vh;
    max-height: 80vh;
    overflow-y: auto;
    scroll-behavior: smooth;

    &>div {
        margin: 0.5rem 0;
    }
}

.list-container {
    background-color: variables.$element-background-color;
    margin: 1rem;
    padding: 1rem;
    border-radius: 1rem;
    // .list-container__header {

    // }

    // .list-container__control {

    // }

    .list {
        // .list__header {

        // }

        // .list__control {

        // }

        &.scroll {
            max-height: min(80vh, calc(100vh - 5rem));
            overflow-y: auto;
            scroll-behavior: smooth;
            margin: 0 1rem;
        }

        .list-item {
            border: variables.$medium-border-style;
            margin: 0.5rem;
            box-shadow: 0.1rem 0.1rem 0.3rem;
            border-radius: 0.3rem;
            padding: 1rem;

            &:not(.error) {
                background-color: variables.$element-hover-background-color;
            }

            &.headline {
                margin: 1rem;
                margin-bottom: 0.5rem;
            }
        }
        .error {
            border: variables.$error-border-style;
        }
        
        .selected {
            outline: 0.4rem blue double;
        }
        
    }
}

button {
    font: inherit;
    border: 1px solid #3e00a1;
    color: #3e00a1;
    background: white;
    border-radius: 3px;
    cursor: pointer;

    &:active, &:hover {
        background-color: #3e00a1;
        color: white;
    }
}

.clickable {
    cursor: pointer;
    &:hover, &:active {
        background: radial-gradient(ellipse at center, color.adjust(variables.$element-hover-background-color, $lightness: -20%), variables.$element-background-color) !important;
    }
}

.selectable {
    cursor: pointer;
    transition: all 0.2s ease-in-out;

    &:not(:disabled) {
        &:not(:focus):hover {
            transform: translateY(-3px);
            box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);
        }
    
        &:focus {
            background-color: variables.$element-hover-background-color;
        }
    }
}

.readonly-box {
    margin-bottom: 1rem;
    border: variables.$medium-border-style;
    background-color: variables.$element-background-color;
    white-space: nowrap ;
    padding: 0 0.2rem;
    line-height: 1.5rem;
}

h1 {
    font-size: 1.2rem;
}

h2 {
    font-size: 1.1rem;
}

h3 {
    font-size: 1.05rem;
}

hr {
    width: 100%;
}

form, .form {
    display: flex;
    flex-direction: column;
    margin: 1rem;
    padding: 1rem;
    &.ng-invalid {
        border-right: 1px variables.$error-border-color solid;
    }

    input, select {
        margin-bottom: 1rem;

        &.ng-invalid {
            border-color: variables.$error-border-color;
        }
    }

    button {
        margin-top: 1rem;
        &:disabled {
            color: white;
        }
    }
}

.list-item__warning {
    position: absolute;
    left: 0;
    bottom: 0;
    right: 0;
    background-color: rgba(238, 223, 138, 0.4);
    opacity: 0.2;
    margin-bottom: 0;

    &:hover, &:active {
        opacity: 1;
        background-color: rgba(238, 223, 138, 0.9);
    }
}

.warning {
    background-color: variables.$warning-background-color;
}

.error {
    background-color: variables.$error-background-color;
}

.error.warning {
    background: linear-gradient(to right, variables.$error-background-color, variables.$warning-background-color);
}

.invisible {
    display: none;
}
