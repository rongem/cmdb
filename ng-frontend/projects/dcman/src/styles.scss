@import "_variables.scss";

* {
    box-sizing: border-box;
}

html, body { height: 100%; }

body {
    color: $main-color;
    background-color: $body-background-color;
    margin: 0;
    margin-top: 4.5rem;
    font-family: Roboto, Verdana, Helvetica, sans-serif;
}

.relative {
    position: relative;
}

.flex {
    display: flex;
}

.grid {
    display: grid;
}

.space-between {
    justify-content: space-between;
}

.flex-column {
    @extend .flex;
    flex-direction: column;
}

.flex-row {
    @extend .flex;
    flex-direction: row;
}

.flex-nowrap {
    flex-wrap: nowrap;
}

.flex-wrap {
    flex-wrap: wrap;
}

.header {
    position: fixed;
    min-width: 20rem;
    top: 0;
    margin: 0 1rem 2rem 1rem;
    display: flex;
    flex-direction: row;
    justify-content: flex-end;
    background-color: $element-background-color;

    @media print {
        display: none;
    }
    
    .header-item {
        border: 2px $main-border-color dotted;
        padding: 0.2rem 0.5rem;
        margin: 0 0.1rem;
        font-weight: bold;
        font-size: 1.1rem;
        a {
            color: $main-color;
            text-decoration: none;
        }
    }
}

.dropdown-toggle {
    cursor: pointer;
    &::after {
        vertical-align: 0;
        display: inline-block;
        width: 0;
        height: 0;
        margin-left: .255em;
        vertical-align: .255em;
        content: "";
        border-top: .3em solid;
        border-right: .3em solid transparent;
        border-bottom: 0;
        border-left: .3em solid transparent;
    }
}

.dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    z-index: $zindex-dropdown;
    display: none; // none by default, but block on "open" of the menu
    float: left;
    min-width: $dropdown-min-width;
    padding: $dropdown-padding-y 0;
    margin: $dropdown-spacer 0 0; // override default ul
    font-size: $font-size-base; // Redeclare because nesting can cause inheritance issues
    color: $body-background-color;
    text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
    list-style: none;
    background-color: $dropdown-bg;
    background-clip: padding-box;
    border: $dropdown-border-width solid $dropdown-border-color;
}

.open .dropdown-menu {
    display: block;
}
 
.dropdown-item {
    display: block;
    // width: 100%;
    padding: .25rem 1.5rem;
    clear: both;
    font-weight: 400;
    text-decoration: none;
    color: #212529;
    text-align: inherit;
    white-space: nowrap;
    background-color: transparent;
    border: 0;
    cursor: pointer;
}

.backdrop {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 4;
}

.overlay {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: lighten(wheat, 10%);
    border: 1px solid darkblue;
    border-radius: 1rem;
    padding: 2rem;
    box-shadow: 0.5rem 0.5rem 0.5rem;
    z-index: 5;
    max-height: 80vh;
    overflow-y: auto;
    scroll-behavior: smooth;

    div {
        margin: 0.5rem 0;
    }
}

.list-container {
    background-color: $element-background-color;
    margin: 1rem;
    padding: 1rem;
    border-radius: 1rem;
    // .list-container__header {

    // }

    // .list-container__control {

    // }

    .list {
        // .list__header {

        // }

        // .list__control {

        // }

        &.scroll {
            max-height: min(80vh, calc(100vh - 5rem));
            overflow-y: auto;
            scroll-behavior: smooth;
            margin: 0 1rem;
        }

        .list-item {
            border: $medium-border-style;
            margin: 0.5rem;
            box-shadow: 0.1rem 0.1rem 0.3rem;
            border-radius: 0.3rem;
            padding: 1rem;

            &:not(.error) {
                background-color: $element-hover-background-color;
            }

            &.headline {
                margin: 1rem;
                margin-bottom: 0.5rem;
            }
        }
        .error {
            border: $error-border-style;
        }
        
        .selected {
            outline: 0.4rem blue double;
        }
        
    }
}

.clickable {
    cursor: pointer;
    &:hover, &:active {
        background: radial-gradient(ellipse at center, darken($element-hover-background-color, 20%), $element-background-color) !important;
    }
}

.readonly-box {
    margin-bottom: 1rem;
    border: $medium-border-style;
    background-color: $element-background-color;
}

h1 {
    font-size: 1.2rem;
}

h2 {
    font-size: 1.1rem;
}

h3 {
    font-size: 1.05rem;
}

hr {
    width: 100%;
}

form, .form {
    display: flex;
    flex-direction: column;
    margin: 1rem;
    padding: 1rem;
    &.ng-invalid {
        border-right: 1px $error-border-color solid;
    }

    input, select {
        margin-bottom: 1rem;

        &.ng-invalid {
            border-color: $error-border-color;
        }
    }

    button {
        margin-top: 1rem;
        &:disabled {
            color: white;
        }
    }
}

.list-item__warning {
    position: absolute;
    left: 0;
    bottom: 0;
    right: 0;
    background-color: rgba(238, 223, 138, 0.4);
    opacity: 0.2;
    margin-bottom: 0;

    &:hover, &:active {
        opacity: 1;
        background-color: rgba(238, 223, 138, 0.9);
    }
}

.warning {
    background-color: $warning-background-color;
}

.error {
    background-color: $error-background-color;
}

.error.warning {
    background: linear-gradient(to right, $error-background-color, $warning-background-color);
}

.invisible {
    display: none;
}
