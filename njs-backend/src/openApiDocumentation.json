{
    "openapi": "3.0.3",
    "info": {
        "title":"DCCMDB",
        "version":"2.0"
    },
    "servers": [
        {
            "url": "http://{servername}/",
            "description":"Node server",
            "variables": {"servername": {
                "description": "name of the server",
                "default": "localhost:8000"
            }}
        }
    ],
    "paths": {
        "/login": {
            "get": {
                "summary": "Get configured authentication method",
                "security": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "maxLength": 4,
                                    "pattern": "^[a-z]*$",
                                    "description": "Configured authentication method"
                                },
                                "examples": {
                                    "jwt": {
                                        "summary": "JSON Web Token",
                                        "value": "jwt"
                                    },
                                    "ntlm": {
                                        "summary": "Windows NTLM authentication",
                                        "value": "ntlm"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "post": {
                "summary": "Authenticate with username and password for JWT. Only available if JWT is the configured method.",
                "security": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "description": "JWT token",
                                            "maxLength": 1000,
                                            "pattern": "^.*$"
                                        },
                                        "userName": {
                                            "type": "string",
                                            "description": "Name of the authenticated user.",
                                            "maxLength": 1000,
                                            "pattern": "^.*$"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                },
                "requestBody": {
                    "description": "Authentication data",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "accountName": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "pattern": "^.*$",
                                        "description": "Account name of the user to authenticate"
                                    },
                                    "passphrase": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "pattern": "^.*$",
                                        "description": "Passphrase of the user"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/rest/attributegroup": {
            "post": {
                "summary": "Create a new attribute group",
                "requestBody": {
                    "description": "Data for the new attribute group",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/attributeGroupBasic"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attributeGroup"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/attributegroup/{id}": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }],
            "get": {
                "summary": "Get a single attribute group by id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attributeGroup"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "put": {
                "summary": "Update the attribute group",
                "requestBody": {
                    "description": "Atribute group to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/attributeGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attributeGroup"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "nothing changed"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "delete": {
                "summary": "Delete the attribute group",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attributeGroup"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/attributegroup/{id}/ItemType{itemTypeId}/CountAttributes": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }, {
                "$ref": "#/components/parameters/itemTypeId"
            }],
            "get": {
                "summary": "Count attributes that exists in items of the given item type and where the attribute types are in the given attribute groups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 0,
                                    "description": "Number of attributes that exists in items of the given item type and where the attribute types are in the given attribute groups"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/attributegroup/{id}/candelete": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }],
            "get": {
                "summary": "Check, if the given attribute group can be deleted (i. e. is not used in any other context)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "enum": ["true", "false"],
                                    "description": "true, if there are no obstacles, false if there are attribute types of that group"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/attributegroups": {
            "get": {
                "summary": "Returns all attribute group objects as an array",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type":"array",
                                    "additionalProperties": false,
                                    "items": {
                                        "$ref": "#/components/schemas/attributeGroup"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/attributegroups/InItemType/{id}": {
            "get": {
                "summary": "Return all attribute group objects that belong to a given item type as an array",
                "parameters": [{
                    "$ref": "#/components/parameters/id"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type":"array",
                                    "additionalProperties": false,
                                    "items": {
                                        "$ref": "#/components/schemas/attributeGroup"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/attributegroups/NotInItemType/{id}": {
            "get": {
                "summary": "Return all attribute group objects that do not belong to the given item type as an array",
                "parameters": [{
                    "$ref": "#/components/parameters/id"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type":"array",
                                    "additionalProperties": false,
                                    "items": {
                                        "$ref": "#/components/schemas/attributeGroup"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/attributetype": {
            "post": {
                "summary": "Create a new attribute type",
                "requestBody": {
                    "description": "Data for the new attribute type",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/attributeTypeBasic"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attributeType"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/attributetype/{id}": {
            "parameters": [
                {
                    "$ref": "#/components/parameters/id"
                }
            ],
            "get": {
                "summary": "Get a single attribute type by id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attributeType"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "put": {
                "summary": "Update the attribute type",
                "requestBody": {
                    "description": "Updated attribute type",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/attributeType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attributeType"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "nothing changed"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "delete": {
                "summary": "Delete the attribute type",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/attributeType"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/attributetype/{id}/candelete": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }],
            "get": {
                "summary": "Check, if the given attribute type can be deleted (i. e. is not used in any other context)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "enum": ["true", "false"],
                                    "description": "true, if there are no obstacles, false if attributes of that type exist"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/attributetype/{id}/ItemAttributes/Count": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }],
            "get": {
                "summary": "Returns the number of existing attributes of the given attribute type",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Number of attributes with the given attribute type"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/attributetype/{id}/CorrespondingValuesOfType": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }],
            "get": {
                "summary": "Returns those attribute types whose values are coherent to the values of the given attribute type and can therefore be migrated together with the attribute type",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "additionalProperties": false,
                                    "items": {
                                        "$ref": "#/components/schemas/attributeType"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/attributetypes": {
            "get": {
                "summary": "Return all attribute type objects as an array",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type":"array",
                                    "additionalProperties": false,
                                    "items": {
                                        "$ref": "#/components/schemas/attributeType"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/attributetypes/ForGroup/{id}": {
            "get": {
                "summary": "Return all attribute type objects that belong to the given attribute group as an array",
                "parameters": [{
                    "$ref": "#/components/parameters/id"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type":"array",
                                    "additionalProperties": false,
                                    "items": {
                                        "$ref": "#/components/schemas/attributeType"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/attributetypes/ForItemType/{id}": {
            "get": {
                "summary": "Return all attribute type objects that belong to the given item type as an array",
                "parameters": [{
                    "$ref": "#/components/parameters/id"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type":"array",
                                    "additionalProperties": false,
                                    "items": {
                                        "$ref": "#/components/schemas/attributeType"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/connectiontype": {
            "post": {
                "summary": "Create a new connection type",
                "requestBody": {
                    "description": "Data for the new connection type",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/connectionTypeBasic"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/connectionType"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/connectiontype/{id}": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }],
            "get": {
                "summary": "Get a single connection type by id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/connectionType"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "put": {
                "summary": "Update the connection type",
                "requestBody": {
                    "description": "Updated connection type",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/connectionType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/connectionType"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "nothing changed"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "delete": {
                "summary": "Delete the connection type",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/connectionType"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/connectiontype/{id}/candelete": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }],
            "get": {
                "summary": "Check, if the given connection type can be deleted (i. e. is not used in any other context)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "enum": ["true", "false"],
                                    "description": "true, if there are no obstacles, false if connection rules with the given type exist"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/connectiontypes": {
            "get": {
                "summary": "Return all connection type objects as an array",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type":"array",
                                    "additionalProperties": false,
                                    "items": {
                                        "$ref": "#/components/schemas/connectionType"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/AllowedDownward/itemtype/{id}": {
            "get": {
                "summary": "Return all connection type objects that can be used with the given item type as upper item type",
                "parameters": [{
                    "$ref": "#/components/parameters/id"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type":"array",
                                    "additionalProperties": false,
                                    "items": {
                                        "$ref": "#/components/schemas/connectionType"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/itemtype": {
            "post": {
                "summary": "Create a new item type",
                "requestBody": {
                    "description": "Data for the new item type",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/itemTypeBasic"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/itemType"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/itemtype/{id}": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }],
            "get": {
                "summary": "Get a single item type by id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/itemType"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "put": {
                "summary": "Update the item type",
                "requestBody": {
                    "description": "Updated item type",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/itemType"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/itemType"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "nothing changed"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "delete": {
                "summary": "Delete the item type",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/itemType"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/itemtype/{id}/candelete": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }],
            "get": {
                "summary": "Check, if the given item type can be deleted (i. e. is not used in any other context)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "enum": ["true", "false"],
                                    "description": "true, if there are no obstacles, false, if items of that type or connection rules with that type exist"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/itemtypes/ForUpper/{id}/ConnectionType/{connectionType}": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }, {
                "$ref": "#/components/parameters/connectionType"
            }],
            "get": {
                "summary": "Returns the lower item types, that are allowed to be connected to for a given upper item type and connection type, in an array",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/itemType"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/itemtypes/ForLower/{id}/ConnectionType/{connectionType}": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }, {
                "$ref": "#/components/parameters/connectionType"
            }],
            "get": {
                "summary": "Returns the uppwer item types, that are allowed to be connected to for a given lowper item type and connection type, in an array",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/itemType"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/itemtypes/ByAllowedAttributeType/{id}": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }],
            "get": {
                "summary": "Returns the item types, that have the same attribute group mapped as the given attribute type",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/itemType"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/connectionrule": {
            "post": {
                "summary": "Create a new connection rule",
                "requestBody": {
                    "description": "Data for the new connection rule",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/connectionRuleBasic"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/connectionRule"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/connectionrule/{id}": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }],
            "get": {
                "summary": "Get a single connection rule by id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/connectionRule"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "put": {
                "summary": "Update the connection rule",
                "requestBody": {
                    "description": "Updated connection rule",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/connectionRule"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/connectionRule"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "nothing changed"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "delete": {
                "summary": "Delete the connection rule",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/connectionRule"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/connectionrule/{id}/candelete": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }],
            "get": {
                "summary": "Check, if the given connection rule can be deleted (i. e. is not used in any other context)",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string",
                                    "enum": ["true", "false"],
                                    "description": "true, if there are no obstacles, false if the connection rule is used inside connections"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/connectionrule/{id}/Connections/Count": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }],
            "get": {
                "summary": "Returns the number of existing connections of the given connection rule",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64",
                                    "minimum": 0,
                                    "description": "Number of connections"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/connectionrule/upperItemType/{upperId}/connectionType/{connectionType}/lowerItemType/{lowerId}": {
            "parameters": [{
                "$ref": "#/components/parameters/upperId"
            }, {
                "$ref": "#/components/parameters/connectionType"
            }, {
                "$ref": "#/components/parameters/lowerId"
            }],
            "get": {
                "summary": "Returns a single connection rule defined by its unique content.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "additionalProperties": false,
                                    "items": {
                                        "$ref": "#/components/schemas/connectionRule"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/connectionrules": {
            "get": {
                "summary": "Return all connection rule objects as an array",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type":"array",
                                    "additionalProperties": false,
                                    "items": {
                                        "$ref": "#/components/schemas/connectionRule"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/connectionrules/ForItemType/{id}": {
            "get": {
                "summary": "Return all connection rule objects that belong to the given item type in any position as an array",
                "parameters": [{
                    "$ref": "#/components/parameters/id"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type":"array",
                                    "additionalProperties": false,
                                    "items": {
                                        "$ref": "#/components/schemas/connectionRule"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/connectionrules/ForUpperItemType/{upperId}/ForLowerItemType/{lowerId}": {
            "parameters": [{
                "$ref": "#/components/parameters/upperId"
            }, {
                "$ref": "#/components/parameters/lowerId"
            }],
            "get": {
                "summary": "Returns all connection rules that exists between two item types as an array",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "additionalProperties": false,
                                    "items": {
                                        "$ref": "#/components/schemas/connectionRule"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/connectionrules/ForUpperItemType/{upperId}": {
            "parameters": [{
                "$ref": "#/components/parameters/upperId"
            }],
            "get": {
                "summary": "Returns all connection rules that contain the given upper item type",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "additionalProperties": false,
                                    "items": {
                                        "$ref": "#/components/schemas/connectionRule"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/connectionrules/ForLowerItemType/{lowerId}": {
            "parameters": [{
                "$ref": "#/components/parameters/lowerId"
            }],
            "get": {
                "summary": "Returns all connection rules that that contain the given lower item type",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "additionalProperties": false,
                                    "items": {
                                        "$ref": "#/components/schemas/connectionRule"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/metaData": {
            "get": {
                "summary": "Return all meta data objects in one huge object, for performance reasons",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "attributeGroups": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/attributeGroup"
                                            }
                                        },
                                        "attributeTypes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/attributeType"
                                            }
                                        },
                                        "connectionTypes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/connectionType"
                                            }
                                        },
                                        "itemTypes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/itemType"
                                            }
                                        },
                                        "connectionRules": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/connectionRule"
                                            }
                                        },
                                        "userRole": {
                                            "type": "integer",
                                            "enum": [0, 1, 2]
                                        },
                                        "userName": {
                                            "type": "string",
                                            "maxLength": 1000,
                                            "pattern": "^.*$"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/user": {
            "summary": "Manager credentials",
            "post": {
                "summary": "Create credential",
                "requestBody": {
                    "description": "Data for the new user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/credential"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/userInfo"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "put": {
                "summary": "Update credential",
                "requestBody": {
                    "description": "Updated user data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/credential"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/userInfo"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/user/current": {
            "get": {
                "summary": "Returns information about the user currently authenticated",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/userInfo"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/user/role": {
            "get": {
                "summary": "Returns the role of the currently authenticated user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "enum": [0, 1, 2]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/users": {
            "get": {
                "summary": "Returns all users as an array",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/userInfo"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }

        },
        "/rest/users/search/{text}": {
            "get": {
                "summary": "Returns a list of users where the account name matches a part of the given text.",
                "parameters": [{
                    "$ref": "#/components/parameters/text"
                }],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/userInfo"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/configurationItem": {
            "post": {
                "summary": "Create a new Configuration item",
                "requestBody": {
                    "description": "Data for the new configuration item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/configurationItemBasic"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/configurationItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/configurationItem/full": {
            "post": {
                "summary": "Create a new Configuration item with connections",
                "requestBody": {
                    "description": "Data for the new configuration item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "pattern": "^.*$",
                                        "description": "Name of the configuration item, unique for each item type"
                                    },
                                    "typeId": {
                                        "type": "string",
                                        "maxLength": 10,
                                        "format": "mongo id",
                                        "pattern": "^[a-z0-9]*$",
                                        "description": "Id of the item type"
                                    },
                                    "attributes": {
                                        "type": "array",
                                        "description": "Attributes of the item",
                                        "items": {
                                            "type": "object",
                                            "description": "Data for the new attribute",
                                            "additionalProperties": false,
                                            "properties": {
                                                "typeId": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "format": "mongo id",
                                                    "pattern": "^[a-z0-9]*$",
                                                    "description": "Id of the attribute type, must be allowd by the item type"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "maxLength": 1000,
                                                    "pattern": "^.*$",
                                                    "description": "Value of the item type, must match the regex pattern of the validation expression of the attribute type"
                                                }
                                            }
                                        }
                                    },
                                    "links": {
                                        "type": "array",
                                        "description": "Links to external websites for the item",
                                        "items": {
                                            "type": "object",
                                            "description": "Data for the new link",
                                            "additionalProperties": false,
                                            "properties": {
                                                "uri": {
                                                    "type": "string",
                                                    "maxLength": 1000,
                                                    "format": "url",
                                                    "pattern": "^https?://.*$",
                                                    "description": "Url of the link, must be http or https"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "maxLength": 1000,
                                                    "pattern": "^.*$",
                                                    "description": "Description for the uri"
                                                }
                                            }
                                        }
                                    },
                                    "users":  {
                                        "type": "array",
                                        "description": "List of the users that are responsible for the item, i.e. are able to change it",
                                        "items": {
                                            "type": "string",
                                            "maxLength": 1000,
                                            "pattern": "^.*$",
                                            "description": "Account name of a user"
                                        }
                                    },
                                    "connectionsToUpper": {
                                        "type": "array",
                                        "description": "Data for full connections to create",
                                        "items": {
                                            "type": "object",
                                            "description": "full connection type",
                                            "additionalProperties": false,
                                            "properties": {
                                                "ruleId": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "format": "mongo id",
                                                    "pattern": "^[a-z0-9]*$",
                                                    "description": "Id of the connection rule. Rule must contain given item type as lower item type."
                                                },
                                                "typeId": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "format": "mongo id",
                                                    "pattern": "^[a-z0-9]*$",
                                                    "description": "Id of the connection type. If set, it must be equal to the connection type of the rule."
                                                },
                                                "targetId": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "format": "mongo id",
                                                    "pattern": "^[a-z0-9]*$",
                                                    "description": "Id of the configuration item to connect. Type of the target item must comply to upper item type in connection rule."
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "maxLength": 1000,
                                                    "pattern": "^.*$",
                                                    "description": "Connection description, must match the validation expression of the rule."
                                                }
                                            }
                                        }
                                    },
                                    "connectionsToLower": {
                                        "type": "array",
                                        "description": "Data for full connections to create",
                                        "items": {
                                            "type": "object",
                                            "description": "full connection type",
                                            "additionalProperties": false,
                                            "properties": {
                                                "ruleId": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "format": "mongo id",
                                                    "pattern": "^[a-z0-9]*$",
                                                    "description": "Id of the connection rule. Rule must contain given item type as upper item type."
                                                },
                                                "typeId": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "format": "mongo id",
                                                    "pattern": "^[a-z0-9]*$",
                                                    "description": "Id of the connection type. If set, it must be equal to the connection type of the rule."
                                                },
                                                "targetId": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "format": "mongo id",
                                                    "pattern": "^[a-z0-9]*$",
                                                    "description": "Id of the configuration item to connect. Type of the target item must comply to lower item type in connection rule."
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "maxLength": 1000,
                                                    "pattern": "^.*$",
                                                    "description": "Connection description, must match the validation expression of the rule."
                                                }
                                            }
                                        }
                                    }

                                },
                                "required": [
                                    "name",
                                    "typeId"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/fullConfigurationItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/configurationItem/{id}": {
            "parameters": [{
                "$ref": "#/components/parameters/id"
            }],
            "get": {
                "summary": "Get a single configuration item by id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/configurationItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "put": {
                "summary": "Update the configuration item",
                "requestBody": {
                    "description": "Updated configuration item",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/configurationItem"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/configurationItem"
                                }
                            }
                        }
                    },
                    "304": {
                        "description": "nothing changed"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "delete": {
                "summary": "Delete the configuration item type",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/configurationItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            },
            "search": {
                "summary": "Search for specific items along connections, beginning at the given configuration item type",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/configurationItem"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/import/ConvertFileToTable": {
            "post": {
                "summary": "Uploads an XLSX or CSV file and converts it into a JSON structure",
                "requestBody": {
                    "description": "XLSX or CSV file with a workbook name",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "workbook": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "fileName": {
                                            "type": "string",
                                            "format": "filename",
                                            "maxLength": 1000,
                                            "pattern": "^.*$"
                                        },
                                        "fileType": {
                                            "type": "string",
                                            "format": "filename",
                                            "maxLength": 100,
                                            "pattern": "^[a-zA-Z0-9/-]*$"
                                        },
                                        "sheets": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "format": "filename",
                                                        "maxLength": 1000,
                                                        "pattern": "^.*$"
                                                    },
                                                    "lines": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string",
                                                                "maxLength": 1000,
                                                                "pattern": "^.*$"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        },
        "/rest/import/DataTable": {
            "put": {
                "summary": "Imports objects from a table of data",
                "requestBody": {
                    "description": "A table that has the column descriptions and cells with data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "itemTypeId": {
                                        "type": "string",
                                        "maxLength": 10,
                                        "pattern": "^[a-z0-9]*$",
                                        "format": "mongo id",
                                        "description": "Unique id of the item type that will be imported"
                                    },
                                    "columns": {
                                        "type": "array",
                                        "minLength": 1,
                                        "items": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "targetType": {
                                                    "type": "string",
                                                    "enum": [
                                                        "name",
                                                        "attribute",
                                                        "connection to upper",
                                                        "connection to lower",
                                                        "linkdescription",
                                                        "linkaddress"
                                                    ],
                                                    "description": "Type of the column to be imported"
                                                },
                                                "targetId": {
                                                    "type": "string",
                                                    "maxLength": 10,
                                                    "pattern": "^[a-z0-9]*$",
                                                    "format": "mongo id",
                                                    "description": "Unique id of the item or attribute that will be imported"
                                                }
                                            },
                                            "required": [
                                                "targetType"
                                            ]
                                        }
                                    },
                                    "rows": {
                                        "type": "array",
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "maxLength": 1000,
                                                "pattern": "^.*$",
                                                "description": "Name of the item to connect to, value of the attribute or link address or description"
                                            }
                                        }
                                    }
                                },
                                "required": [
                                    "itemTypeId", "columns", "rows"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "properties": {
                                            "index": {
                                                "type": "integer",
                                                "format": "int64",
                                                "minimum": 1,
                                                "description": "Line number"
                                            },
                                            "message": {
                                                "type": "string",
                                                "maxLength": 1000,
                                                "pattern": "^.*$",
                                                "description": "Result of the action that was performed"
                                            },
                                            "subject": {
                                                "type": "string",
                                                "maxLength": 1000,
                                                "pattern": "^.*$",
                                                "description": "Object that was used"
                                            },
                                            "details": {
                                                "type": "string",
                                                "maxLength": 1000,
                                                "pattern": "^.*$",
                                                "description": "More information about the action"
                                            },
                                            "severity": {
                                                "type": "integer",
                                                "enum": [0, 1, 2, 3],
                                                "description": "Severity of the message: 0 = info, 1 = warning, 2 = error (line could not be imported completely), 3 = fatal (stopped import)"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "415": {
                        "$ref": "#/components/responses/415"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    },
                    "default": {
                        "$ref": "#/components/responses/default"
                    }
                }
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "components": {
        "schemas": {
            "error": {
                "description": "An error object with a message",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "message": {
                        "type": "string",
                        "maxLength": 1000,
                        "pattern": "^.*$",
                        "description": "Main error message"
                    }
                }
            },
            "validationError": {
                "description": "An error object that enumerates all validation errors",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "message": {
                        "type": "string",
                        "maxLength": 1000,
                        "pattern": "^.*$",
                        "description": "Main error message"
                    },
                    "data": {
                        "type": "object",
                        "description": "Detailed errors",
                        "additionalProperties": false,
                        "properties": {
                            "errors": {
                                "type": "array",
                                "additionalProperties": false,
                                "items": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "maxLength": 1000,
                                            "pattern": "^.*$",
                                            "description": "Problematic value that was sent"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "maxLength": 1000,
                                            "pattern": "^.*$",
                                            "description": "Validation error message"
                                        },
                                        "param": {
                                            "type": "string",
                                            "maxLength": 1000,
                                            "pattern": "^.*$",
                                            "description": "Parameter name with validation problem"
                                        },
                                        "location": {
                                            "type": "string",
                                            "enum": ["body", "path", "params"],
                                            "description": "Location of the parameter"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "id": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "id": {
                        "type": "string",
                        "maxLength": 10,
                        "pattern": "^[a-z0-9]*$",
                        "format": "mongo id",
                        "description": "Unique id"
                    }
                },
                "required": ["id"]
            },
            "attributeGroupBasic": {
                "description": "An attribute group object that handles multiple attribute types, without id, for creating.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.*$",
                        "description": "Unique name of the attribute group"
                    }
                },
                "required": ["name"]
            },
            "attributeGroup": {
                "description": "An attribute group object that handles multiple attribute types.",
                "allOf": [{
                    "$ref": "#/components/schemas/id"
                    },{
                    "$ref": "#/components/schemas/attributeGroupBasic"
                }]
            },
            "attributeTypeBasic": {
                "description": "An attribute type object for creating.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.*$",
                        "description": "Unique name of the attribute type"
                    },
                    "attributeGroupId": {
                        "type": "string",
                        "maxLength": 10,
                        "format": "mongo id",
                        "pattern": "^[a-z0-9]*$",
                        "description": "id of the attribute group to which the attribute type belongs"
                    },
                    "validationExpression": {
                        "type": "string",
                        "maxLength": 1000,
                        "pattern": "^.*$",
                        "format": "regular expression",
                        "description": "Regular expression that is used for validation of attribute values"
                    }
                },
                "required": [
                    "name",
                    "attributeGroupId",
                    "validationExpression"
                ]
            },
            "attributeType": {
                "description": "An attribute type object.",
                "allOf": [{
                    "$ref": "#/components/schemas/id"
                }, {
                    "$ref": "#/components/schemas/attributeTypeBasic"
                }, {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "attributeGroupName": {
                            "type": "string",
                            "maxLength": 255,
                            "pattern": "^.*$",
                            "description": "name of the attribute group to which the attribute type belongs"
                        }
                    }
                }]
            },
            "connectionTypeBasic": {
                "description": "A connection type object for creating.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.*$",
                        "description": "Unique name of the connection type when viewing from the upper item"
                    },
                    "reverseName": {
                        "type": "string",
                        "maxLength": 10,
                        "pattern": "^.*$",
                        "description": "Name of the connection type when viewing from the lower item"
                    }
                },
                "required": [
                    "name",
                    "reverseName"
                ]
            },
            "connectionType": {
                "description": "A connection type object.",
                "allOf": [{
                    "$ref": "#/components/schemas/id"
                }, {
                    "$ref": "#/components/schemas/connectionTypeBasic"
                }]
            },
            "itemTypeBasic": {
                "description": "An item type object for creation.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.*$",
                        "description": "Unique name of the item type"
                    },
                    "backColor": {
                        "type": "string",
                        "maxLength": 7,
                        "format": "color code",
                        "pattern": "^#[A-F0-9]{6}$",
                        "description": "Color code of the item type"
                    },
                    "attributeGroups": {
                        "type": "array",
                        "description": "Attribute groups that are mapped to the item type",
                        "items": {
                            "$ref": "#/components/schemas/attributeGroup"
                        }
                    }
                },
                "required": [
                    "name",
                    "backColor"
                ]
            },
            "itemType": {
                "description": "An item type object.",
                "allOf": [{
                    "$ref": "#/components/schemas/id"
                }, {
                    "$ref": "#/components/schemas/itemTypeBasic"
                }]
            },
            "connectionRuleBasic": {
                "description": "A connection rule object for creating. It allows connections between items of two different types.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "upperItemTypeId": {
                        "type": "string",
                        "maxLength": 10,
                        "format": "mongo id",
                        "pattern": "^[a-z0-9]*$",
                        "description": "Unique id of the item type in the upper position"
                    },
                    "connectionTypeId": {
                        "type": "string",
                        "maxLength": 10,
                        "format": "mongo id",
                        "pattern": "^[a-z0-9]*$",
                        "description": "Unique id of the connection type"
                    },
                    "lowerItemTypeId": {
                        "type": "string",
                        "maxLength": 10,
                        "format": "mongo id",
                        "pattern": "^[a-z0-9]*$",
                        "description": "Unique id of the item type in the lower position"
                    },
                    "maxConnectionsToUpper": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1,
                        "maximum": 9999,
                        "description": "Maximum nunber of connections, that an item of the lower type can have with items of the upper type"
                    },
                    "maxConnectionsToLower": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1,
                        "maximum": 9999,
                        "description": "Maximum nunber of connections, that an item of the upper type can have with items of the lower type"
                    },
                    "validationExpression": {
                        "type": "string",
                        "maxLength": 1000,
                        "pattern": "^.*$",
                        "format": "regular expression",
                        "description": "Regular expression that is used for validation of attribute values"
                    }
                },
                "required": [
                    "upperItemTypeId",
                    "lowerItemTypeId",
                    "connectionTypeId",
                    "maxConnectionsToUpper",
                    "maxConnectionsToLower",
                    "validationExpression"
                ]
            },
            "connectionRule": {
                "description": "A connection rule object. It allows connections between items of two different types.",
                "allOf": [{
                    "$ref": "#/components/schemas/id"
                }, {
                    "$ref": "#/components/schemas/connectionRuleBasic"
                }]
            },
            "userInfo": {
                "type": "object",
                "description": "Object with data about a user",
                "additionalProperties": false,
                "properties": {
                    "accountName": {
                        "type": "string",
                        "maxLength": 1000,
                        "pattern": "^.*$",
                        "description": "Account name of the user"
                    },
                    "role": {
                        "type": "number",
                        "enum": [0, 1, 2],
                        "description": "User role: 0 - Reader, 1 - Editor, 2 - Administrator"
                    },
                    "roleName": {
                        "type": "string",
                        "enum": ["Reader", "Editor", "Administrator"]
                    }
                },
                "required": [
                    "accountName", "role"
                ]
            },
            "credential": {
                "type": "object",
                "description": "Object with user credentials",
                "additionalProperties": false,
                "properties": {
                    "accountName": {
                        "type": "string",
                        "maxLength": 1000,
                        "pattern": "^.*$",
                        "description": "Account name of the user"
                    },
                    "role": {
                        "type": "number",
                        "enum": [0, 1, 2],
                        "description": "User role: 0 - Reader, 1 - Editor, 2 - Administrator"
                    },
                    "passphrase": {
                        "type": "string",
                        "maxLength": 1000,
                        "pattern": "^.*$",
                        "format": "complex password",
                        "description": "(Only required for JWT): Passphrase for the user"
                    }
                },
                "required": [
                    "accountName", "role"
                ]
            },
            "configurationItemBasic": {
                "type": "object",
                "description": "A configuration item object for creating.",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "pattern": "^.*$",
                        "description": "Name of the configuration item, unique for each item type"
                    },
                    "typeId": {
                        "type": "string",
                        "maxLength": 10,
                        "format": "mongo id",
                        "pattern": "^[a-z0-9]*$",
                        "description": "Id of the item type"
                    },
                    "attributes": {
                        "type": "array",
                        "description": "Attributes of the item",
                        "items": {
                            "type": "object",
                            "description": "Data for the new attribute",
                            "additionalProperties": false,
                            "properties": {
                                "typeId": {
                                    "type": "string",
                                    "maxLength": 10,
                                    "format": "mongo id",
                                    "pattern": "^[a-z0-9]*$",
                                    "description": "Id of the attribute type, must be allowd by the item type"
                                },
                                "value": {
                                    "type": "string",
                                    "maxLength": 1000,
                                    "pattern": "^.*$",
                                    "description": "Value of the item type, must match the regex pattern of the validation expression of the attribute type"
                                }
                            }
                        }
                    },
                    "links": {
                        "type": "array",
                        "description": "Links to external websites for the item",
                        "items": {
                            "type": "object",
                            "description": "Data for the new link",
                            "additionalProperties": false,
                            "properties": {
                                "uri": {
                                    "type": "string",
                                    "maxLength": 1000,
                                    "format": "url",
                                    "pattern": "^https?://.*$",
                                    "description": "Url of the link, must be http or https"
                                },
                                "description": {
                                    "type": "string",
                                    "maxLength": 1000,
                                    "pattern": "^.*$",
                                    "description": "Description for the uri"
                                }
                            }
                        }
                    },
                    "users":  {
                        "type": "array",
                        "description": "List of the users that are responsible for the item, i.e. are able to change it",
                        "items": {
                            "type": "string",
                            "maxLength": 1000,
                            "pattern": "^.*$",
                            "description": "Account name of a user"
                        }
                    }
                },
                "required": [
                    "name",
                    "typeId"
                ]
            },
            "configurationItem": {
                "description": "A configuration item object",
                "allOf": [{
                    "$ref": "#/components/schemas/id"
                }, {
                    "$ref": "#/components/schemas/configurationItemBasic"
                }]
            },
            "fullConnection": {
                "type": "object",
                "additionalProperties": false,
                "description": "transformed connection object for full configuration items",
                "properties": {
                    "id": {
                        "type": "string",
                        "maxLength": 10,
                        "format": "mongo id",
                        "pattern": "^[a-z0-9]*$",
                        "description": "Id of the connection."
                    },
                    "ruleId": {
                        "type": "string",
                        "maxLength": 10,
                        "format": "mongo id",
                        "pattern": "^[a-z0-9]*$",
                        "description": "Id of the connection rule. Rule must contain given item type as target (upper or lower) item type."
                    },
                    "typeId": {
                        "type": "string",
                        "maxLength": 10,
                        "format": "mongo id",
                        "pattern": "^[a-z0-9]*$",
                        "description": "Id of the connection type. If set, it must be equal to the connection type of the rule."
                    },
                    "type": {
                        "type": "string",
                        "maxLength": 1000,
                        "pattern": "^.*$",
                        "description": "Name of the connection type in the target's direction, i.e. forward for connections to lower and reverse for connections to upper."
                    },
                    "targetId": {
                        "type": "string",
                        "maxLength": 10,
                        "format": "mongo id",
                        "pattern": "^[a-z0-9]*$",
                        "description": "Id of the configuration item to connect. Type of the target item must comply to target item type in connection rule."
                    },
                    "targetTypeId": {
                        "type": "string",
                        "maxLength": 10,
                        "format": "mongo id",
                        "pattern": "^[a-z0-9]*$",
                        "description": "Id of the item type of the connection rule."
                    },
                    "targetName": {
                        "type": "string",
                        "maxLength": 1000,
                        "pattern": "^.*$",
                        "description": "Name of the target configuration item."
                    },
                    "targetColor": {
                        "type": "string",
                        "maxLength": 7,
                        "format": "color code",
                        "pattern": "^#[A-F0-9]{6}$",
                        "description": "Color code of the target item type"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 1000,
                        "pattern": "^.*$",
                        "description": "Connection description, must match the validation expression of the rule."
                    }
                },
                "required": [
                    "id",
                    "ruleId",
                    "targetId",
                    "description"
                ]
            },
            "fullConfigurationItem": {
                "allOf": [{
                    "$ref": "#/components/schemas/configurationItem"
                }, {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "connectionsToLower": {
                            "type": "array",
                            "description": "Array of full connections",
                            "items": {
                                "$ref": "#/components/schemas/fullConnection"
                            }
                        },
                        "connectionsToUpper": {
                            "type": "array",
                            "description": "Array of full connections",
                            "items": {
                                "$ref": "#/components/schemas/fullConnection"
                            }
                        }
                    }
                }]
            }
        },
        "responses": {
            "401": {
                "description": "invalid username or password",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/error"
                        }
                    }
                }
            },
            "403": {
                "description": "not admin user",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/error"
                        }
                    }
                }
            },
            "404": {
                "description": "object not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/error"
                        }
                    }
                }
            },
            "415": {
                "description": "unsupported media type",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "string",
                            "maxLength": 1000,
                            "pattern": "^.*$"
                        }
                    }
                }
            },
            "422": {
                "description": "Validation errors occured",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/validationError"
                        }
                    }
                }
            },
            "default": {
                "description": "Server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/error"
                        }
                    }
                }
            }
        },
        "parameters": {
            "id": {
                "name":"id",
                "in": "path",
                "required": true,
                "description": "Id of the object",
                "schema": { 
                    "type": "string",
                    "maxLength": 10,
                    "format": "mongo id",
                    "pattern": "^[A-Za-z0-9]*$"
                }
            },
            "itemTypeId": {
                "name":"itemTypeId",
                "in": "path",
                "required": true,
                "description": "Id of an item type",
                "schema": { 
                    "type": "string",
                    "maxLength": 10,
                    "format": "mongo id",
                    "pattern": "^[A-Za-z0-9]*$"
                }
            },
            "connectionType": {
                "name":"connectionType",
                "in": "path",
                "required": true,
                "description": "Id of the connection type",
                "schema": { 
                    "type": "string",
                    "maxLength": 10,
                    "format": "mongo id",
                    "pattern": "^[A-Za-z0-9]*$"
                }
            },
            "upperId": {
                "name":"upperId",
                "in": "path",
                "required": true,
                "description": "Id of the upper item or item type",
                "schema": { 
                    "type": "string",
                    "maxLength": 10,
                    "format": "mongo id",
                    "pattern": "^[A-Za-z0-9]*$"
                }
            },
            "lowerId": {
                "name":"lowerId",
                "in": "path",
                "required": true,
                "description": "Id of the lower item or item type",
                "schema": { 
                    "type": "string",
                    "maxLength": 10,
                    "format": "mongo id",
                    "pattern": "^[A-Za-z0-9]*$"
                }
            },
            "text": {
                "name":"text",
                "in": "path",
                "required": true,
                "description": "search text",
                "schema": { 
                    "type": "string",
                    "maxLength": 10000,
                    "pattern": "^.*$"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}